{"kind":"Notebook","sha256":"ef20296b60c575ff6ed1664d60c70f2478c87e0f18af9dae306f59eb318b5717","slug":"inv-dcr-1d","location":"/notebooks/05-dcr/inv_dcr_1d.ipynb","dependencies":[],"frontmatter":{"title":"1D Inversion for a Single Sounding","content_includes_title":false,"github":"https://github.com/simpeg/user-tutorials","keywords":[],"exports":[{"format":"ipynb","filename":"inv_dcr_1d.ipynb","url":"/user-tutorials/build/inv_dcr_1d-fd5d593cf1556beea95c9876df584750.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"admonition","class":"caution","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uqpWAvtuNE"}],"key":"boQSOGHw94"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QjikhFmd5F"}],"key":"f36y6IW43I"}],"key":"k6Vg8pg1zZ"}],"data":{"type":"notebook-content"},"key":"CCphmuEFPY"},{"type":"block","children":[{"type":"admonition","class":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Light-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VoBUHTmhUT"}],"key":"nyG6Xv6a9B"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial requires minimal computational resources and can be executed quickly in the background while other computer processes are running.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iF1HJ5Mx6O"}],"key":"gcGxjRD284"}],"key":"cRrMCSypTf"}],"data":{"type":"notebook-content"},"key":"n8QO3z5Ney"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YWOZnVovj3"}],"key":"JjJ9utkwa4"},{"type":"text","value":" Devin C. Cowan","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e0Wp8f2O8U"}],"key":"GqOO9SpAun"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NydRXEXPVH"}],"key":"oCQHo3QLnH"},{"type":"text","value":" DC resistivity, 1D sounding, inversion, parametric, sparse norm, apparent resistivity, wires mapping.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Mp9H6BtHmM"}],"key":"ZDjZRQqaZc"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"sUbuCFNfJq"}],"key":"A9xMs3BiYd"},{"type":"text","value":" Here we invert DC resistivity data for a single Wenner sounding. We demonstrate 3 approaches that can be used to invert 1D data in SimPEG:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fJF7bLtCiD"}],"key":"gijenpR9pu"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"A weighted least-squares inversion where the number of layers and their thicknesses are fixed.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"OqdkBryHEv"}],"key":"jmSuaufXsb"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"An iteratively reweighted least-squares (IRLS) inversion to recover sparse and/or blocky structures.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"b5soLxEUPS"}],"key":"fgsPlMpXik"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"A parametric inversion where we invert for the layer thicknesses and electrical properties assuming a 3-layered Earth.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"qZ8RpLJ5R4"}],"key":"jPEJq98YdX"}],"key":"PP5tEuomOY"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"kjZ7dL5sVg"},{"type":"emphasis","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"weighted least-squares","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Wz8mpvPs0w"}],"key":"yECreGdgk9"},{"type":"text","value":" approach is a great introduction to geophysical inversion with SimPEG. One drawback however, is that it recovers smooth structures which may not be representative of the true model. To recover sparse and/or blocky 1D structures, we demonstrate an ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"KJ72ypbBnz"},{"type":"emphasis","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"iteratively reweighted least-squares","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"HwEvaisNPd"}],"key":"AtV3Us9m6P"},{"type":"text","value":" approach. If the number of layers is known, but their depths, thicknesses and conductivities are not, we can use a ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"sL9e3K31JN"},{"type":"emphasis","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"parametric inversion","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"uBNwDDLU3n"}],"key":"HOx4Nu1Lv9"},{"type":"text","value":" approach.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"TdkbayTJES"}],"key":"F8TeOJJDTe"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Learning Objectives:","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"OkufTdCXAc"}],"key":"b5Bd7wtp3K"},{"type":"text","value":" Because this tutorial focusses primarily on inversion-related functionality, we urge the reader to become familiar with functionality explained in the ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"L1hOaxfjyM"},{"type":"link","url":"/fwd-dcr-1d","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"1D Forward Simulation of DC Resistivity Data","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"z1Vu3HrifU"}],"urlSource":"fwd_dcr_1d.ipynb","internal":true,"dataUrl":"/fwd-dcr-1d.json","protocol":"file","key":"tbqN3fyl9o"},{"type":"text","value":" tutorial before working through this one. For this tutorial, we focus on:","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"z4A87kNPBk"}],"key":"b9vtLcCa24"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"General approaches for 1D inversion with SimPEG.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"R1hLFv8bDB"}],"key":"q4SSz1aN4P"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"How to assign appropriate uncertainties to apparent resistivity or normalized voltage data.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"eB6xLgBQP3"}],"key":"lFdBGibsb8"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Choosing suitable parameters for the inversion.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"tSbg17S9Y5"}],"key":"fNoKzOQ8NL"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Specifying directives that are applied throughout the inversion.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"g5I9WTajWk"}],"key":"f5WaPrNg2k"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Weighted least-squares, sparse-norm and parametric inversion.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"h9Osyui7rQ"}],"key":"ErJIQJ3F3d"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Analyzing inversion outputs.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"oBM2IfdCSF"}],"key":"KTf4zq0YWR"}],"key":"vFklabzwd8"}],"data":{"type":"notebook-content"},"key":"Cz6ljMrslF"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r3AZYFGcdQ"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"IaLWeB7JUL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise.\nAll of the functionality specific to the forward simulation of 1D DC resistivity data are imported from the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NrlIgt5znH"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/SimPEG.electromagnetics.static.resistivity.html#module-simpeg.electromagnetics.static.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG​.electromagnetics​.static​.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"grzhrlTb09"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity","internal":false,"protocol":"myst","key":"OFCdUWC070"},{"type":"text","value":" module. Classes required to define the data misfit, regularization, optimization, etc... are imported from elsewhere within SimPEG. We also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Q4OeoOqmPC"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/SimPEG.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kmTJPhYW9n"}],"urlSource":"myst:SimPEG#SimPEG.utils","internal":false,"protocol":"myst","key":"sfe3hOSGEi"},{"type":"text","value":". To generate the mesh used for the inversion, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jzfaduSIDu"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lUQgYOZInw"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"sqrnlWMVNb"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nmeTRit5ID"}],"key":"ryOXHclgyh"}],"data":{"type":"notebook-content"},"key":"PurCVxUkZN"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom SimPEG.electromagnetics.static import resistivity as dc\nfrom SimPEG.utils import plot_1d_layer_model, download\nfrom SimPEG import (\n    maps,\n    data,\n    data_misfit,\n    regularization,\n    optimization,\n    inverse_problem,\n    inversion,\n    directives,\n)\n\n# discretize functionality\nfrom discretize import TensorMesh\n\n# Basic Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport tarfile\n\nmpl.rcParams.update({\"font.size\": 14})","key":"PkfylYgrEm"},{"type":"output","id":"bOvXKZIm9Xq4UZtj1FqXN","data":[],"key":"rbolnGd0Dc"}],"data":{"type":"notebook-code"},"key":"VsiwKtqwEp"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Download Tutorial Files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N5r3qnDa9u"}],"identifier":"download-tutorial-files","label":"Download Tutorial Files","html_id":"download-tutorial-files","implicit":true,"key":"X5oQt2gEtP"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For this tutorial, the observed data for the Wenner sounding are stored within a tar-file. Here, we download and extract the data file.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qONYA7doNY"}],"key":"SO5LPhiNrY"}],"data":{"type":"notebook-content"},"key":"LKdauGaTBN"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# URL to download from repository assets\ndata_source = \"https://github.com/simpeg/user-tutorials/raw/main/assets/05-dcr/inv_dcr_1d_files.tar.gz\"\n\n# download the data\ndownloaded_data = download(data_source, overwrite=True)\n\n# unzip the tarfile\ntar = tarfile.open(downloaded_data, \"r\")\ntar.extractall()\ntar.close()\n\n# path to the directory containing our data\ndir_path = downloaded_data.split(\".\")[0] + os.path.sep\n\n# files to work with\ndata_filename = dir_path + \"app_res_1d_data.dobs\"","key":"EOvsZcLvRG"},{"type":"output","id":"JPpkqwyS1yxi9JBaJ8Wu8","data":[{"name":"stdout","output_type":"stream","text":"Downloading https://github.com/simpeg/user-tutorials/raw/main/assets/05-dcr/inv_dcr_1d_files.tar.gz\n   saved to: D:\\Documents\\Repositories\\user-tutorials\\notebooks\\05-dcr\\inv_dcr_1d_files.tar.gz\nDownload completed!\n"}],"key":"NT1G1LAr4c"}],"data":{"type":"notebook-code","scrolled":false},"key":"Abg0Ahlkot"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load and Plot the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RcixUGv2az"}],"identifier":"load-and-plot-the-data","label":"Load and Plot the Data","html_id":"load-and-plot-the-data","implicit":true,"key":"CGlhhndKsb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we load and parse the data file containing observed data and survey geometry. The data file contains the xyz locations for the A, B, M and N electrodes, in order, as well as the observed data. We then compute the AB/2 (half separation distance) and plot the Wenner sounding data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XMOasWXtxt"}],"key":"Lcb7srUm23"}],"data":{"type":"notebook-content"},"key":"QM20dQyqSM"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Load data\ndobs = np.loadtxt(str(data_filename))","key":"jWgKtDqlTk"},{"type":"output","id":"5nXQloQ055D1I0v3LoKoW","data":[],"key":"L7YT4YIEUZ"}],"data":{"type":"notebook-code"},"key":"eCtVR7xhQO"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Extract A, B, M and N electrode locations and the observed data\nA_electrodes = dobs[:, 0:3]\nB_electrodes = dobs[:, 3:6]\nM_electrodes = dobs[:, 6:9]\nN_electrodes = dobs[:, 9:12]\ndobs = dobs[:, -1]","key":"mrw2ynTGSa"},{"type":"output","id":"Xm6gflUIY9NI6Mm0mZh1i","data":[],"key":"EmBjVP6dHx"}],"data":{"type":"notebook-code"},"key":"hhw2qBu5p3"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Compute the AB/2 separation for the 1D Wenner array\nAB_separations = np.sqrt(np.sum((A_electrodes - B_electrodes) ** 2, axis=1))","key":"Sqzl3dlw4h"},{"type":"output","id":"LmBFDnanQsWSJ0QhVjsdm","data":[],"key":"NhfZwfa1b5"}],"data":{"type":"notebook-code"},"key":"aeHWr8E42O"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot apparent resistivity as a function of AB/2\nfig = plt.figure(figsize=(8, 4))\nmpl.rcParams.update({\"font.size\": 14})\nax1 = fig.add_axes([0.15, 0.1, 0.7, 0.85])\nax1.semilogy(AB_separations / 2, dobs, \"b-o\")\nax1.grid(which=\"both\")\nax1.set_xlabel(\"AB/2 (m)\")\nax1.set_ylabel(r\"Apparent Resistivity ($\\Omega m$)\")\nplt.show()","key":"M1uF5raYTH"},{"type":"output","id":"tiWz4lKQvZmil68k4-4RM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"235e58b1e4ed85280572be627375cd9e","path":"/user-tutorials/build/235e58b1e4ed85280572be627375cd9e.png"},"text/plain":{"content":"<Figure size 800x400 with 1 Axes>","content_type":"text/plain"}}}],"key":"n23nDKmuan"}],"data":{"type":"notebook-code"},"key":"mnPBsnondG"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Assign Uncertainties","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qwI6HiTVGg"}],"identifier":"assign-uncertainties","label":"Assign Uncertainties","html_id":"assign-uncertainties","implicit":true,"key":"xssZHwqD3u"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Inversion with SimPEG requires that we define the uncertainties on our data; that is, an estimate of the standard deviation of the noise on our data assuming it is uncorrelated Gaussian with zero mean. An online resource explaining uncertainties and their role in the inversion can be found ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sYe6JxrSn9"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ga3DUg2hck"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"veC2y9jnyL"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SYdDYFU10w"}],"key":"OMhBYcXFUJ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For 1D apparent resistivity data,","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"j1qe4Imdsj"}],"key":"WyZTjVsC2q"},{"type":"text","value":" we generally apply a percent uncertainty to all data. A percent uncertainty will fit conductive and resistive structures equally; unlike a floor uncertainty which will prioritize fitting more resistive structures. For this tutorial, we apply a 2% uncertainty to all data. Depending on the quality of the data, we may choose a percent uncertainty between 2% - 10%.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Z9eY5fTWyO"}],"key":"FPX8AShmQs"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For 1D normalized voltage data,","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ufvC9wOURu"}],"key":"mP7EVNZXoa"},{"type":"text","value":" we also tend to apply a percent uncertainty to all data. Differences in electrode spacing and subsurface conductivity result in measured voltages that span many orders of magnitude. A percent uncertainty ensures all data are fit equally. Like apparent resistivity, a percent uncertainty of 2% - 10% is a good initial guess.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GhRtfWsvIP"}],"key":"enfDOJQxYg"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"NOTE: if the data contain very small values that you feel could be erroneous, a small floor value can be added to ensure stability of the inversion.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZrBfKbvLoR"}],"key":"KisHxMBqaL"}],"key":"FTIhxndanx"}],"data":{"type":"notebook-content"},"key":"BX8BBlfVWL"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Add 2.5% uncertainties to all data.\nuncertainties = 0.025 * np.abs(dobs)","key":"x2XiOLSAfO"},{"type":"output","id":"6grgJKvPlxzoYG_i9iYiQ","data":[],"key":"usMhOQmofc"}],"data":{"type":"notebook-code"},"key":"jIdDw7eOtA"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZDTHeik6xX"}],"identifier":"define-the-survey","label":"Define the Survey","html_id":"define-the-survey","implicit":true,"key":"Za8DgaNLWY"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we define the survey geometry. Although the survey consists of a single 1D Wenner sounding, the approach is generalized for 2D and 3D surveys where the electrode locations may not be sorted. For a comprehensive description of constructing DC resistivity surveys in SimPEG, see the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ftKw4gCL52"},{"type":"link","url":"/fwd-dcr-1d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vPb4PMFH3p"}],"urlSource":"fwd_dcr_1d.ipynb","internal":true,"dataUrl":"/fwd-dcr-1d.json","protocol":"file","key":"K1KefbQ0tw"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LPGag8zj1m"}],"key":"vmXcVEgCmG"}],"data":{"type":"notebook-content"},"key":"HQhdnENfF8"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Sort by unique current electrode locations\nunique_tx, k = np.unique(np.c_[A_electrodes, B_electrodes], axis=0, return_index=True)\nn_sources = len(k)\nk = np.sort(k)\nk = np.r_[k, len(k) + 1]","key":"H4LrWMTmlh"},{"type":"output","id":"APA6fEZ7GHbRDLCKxJ9Pz","data":[],"key":"Sb5k8fzzmp"}],"data":{"type":"notebook-code"},"key":"DMlGNRUnHD"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define empty list for sources to live\nsource_list = []\n\n# Loop over all sources\nfor ii in range(0, n_sources):\n    # MN electrode locations for receivers. Each is an (N, 3) numpy array\n    M_locations = M_electrodes[k[ii] : k[ii + 1], :]\n    N_locations = N_electrodes[k[ii] : k[ii + 1], :]\n    receiver_list = [\n        dc.receivers.Dipole(\n            M_locations,\n            N_locations,\n            data_type=\"apparent_resistivity\",\n        )\n    ]\n\n    # AB electrode locations for source. Each is a (1, 3) numpy array\n    A_location = A_electrodes[k[ii], :]\n    B_location = B_electrodes[k[ii], :]\n    source_list.append(dc.sources.Dipole(receiver_list, A_location, B_location))\n\n# Define survey\nsurvey = dc.Survey(source_list)","key":"rJiLSpIV43"},{"type":"output","id":"E_IV70latnQfXfzT7dGce","data":[],"key":"R4ttBVVUJy"}],"data":{"type":"notebook-code"},"key":"tBQWDBvgJx"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k8PG81XEzN"}],"identifier":"define-the-data","label":"Define the Data","html_id":"define-the-data","implicit":true,"key":"QbVYsmaaUs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The SimPEG ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wCQ1ifKXUx"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.data.Data.html#simpeg.data.data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YVUTj0R5di"}],"urlSource":"myst:SimPEG#SimPEG.data.Data","internal":false,"protocol":"myst","key":"FR4WZJVVV0"},{"type":"text","value":" class is required for inversion and connects the observed data, uncertainties and survey geometry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jD33rEQNrY"}],"key":"LGEsLKiwOG"}],"data":{"type":"notebook-content"},"key":"uRVq4yMUOE"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"data_object = data.Data(survey, dobs=dobs, standard_deviation=uncertainties)","key":"VEo51y3suF"},{"type":"output","id":"nUGJAOatp9b9VKm_ps2In","data":[],"key":"X6bAkbXBTf"}],"data":{"type":"notebook-code"},"key":"bhexW9WUDL"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZBjTsQEn8m"}],"identifier":"weighted-least-squares-inversion","label":"Weighted Least-Squares Inversion","html_id":"weighted-least-squares-inversion","implicit":true,"key":"xlcsjZDmRE"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the weighted least-squares inversion approach to recover the log-conductivities on a 1D layered Earth. We impose no a-priori information about the number of layers (geological units) or their thicknesses. Instead, we define a large number of layers with exponentially increasing thicknesses. And the depth, thickness and electrical properties of the Earth are inferred from the recovered model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"igmJ6Csuox"}],"key":"KOZrxODr0w"}],"data":{"type":"notebook-content"},"key":"IeB3R2QcwU"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a 1D Layered Earth","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EODruuayYC"}],"identifier":"design-a-1d-layered-earth","label":"Design a 1D Layered Earth","html_id":"design-a-1d-layered-earth","implicit":true,"key":"Tx36m8qMXx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When the spacings between the electrodes are small, we are obtaining higher resolution information about the conductivity near the Earth’s surface. As a result, we define much thinner layers near the Earth’s surface. When the spacings between electrodes are large, we are obtaining lower resolution information about the conductivity at depth. So at depth, we can define layers that are much thicker. The thickness defining the top layer is ultimately determined by the minimum electrode spacing. And the thickness and depth to the lower layer is determined by the largest electrode spacing. The rate at which the layer thicknesses increase with depth is determined by the user.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cVX7fIxgFW"}],"key":"N2Ouq6HX6y"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For Wenner soundings:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IQTaxJk9C6"}],"key":"wu29pwVk5m"},{"type":"text","value":" For the 1D Wenner array, the layer thicknesses and largest depth are determined by the AB/2 spacing. A reasonable minimum layer thickness is 10% the minimum AB/2 spacing. And the depth to the bottom layer should be roughly equal to the largest AB/2 spacing.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jZ8ZZwDi9x"}],"key":"JbHHRrvGxx"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For dipole-dipole, pole-dipole, etc...:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IwxdtnslZ3"}],"key":"TSB8oNKsPT"},{"type":"text","value":" For these surveys, the source electrodes AB and receiver electrodes MN are offset from one another. For a particular set of electrodes ABMN, we consider the distance between the average source location and average receiver location. For a dipole-dipole survey, this would be:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UE4Eh6CMNq"}],"key":"UZCQrkYWFr"},{"type":"math","value":"d = \\Bigg | \\frac{\\vec{r}_A+\\vec{r}_B}{2} - \\frac{\\vec{r}_M+\\vec{r}_N}{2} \\Bigg |","position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mo>=</mo><mo fence=\"false\" stretchy=\"true\" minsize=\"3em\" maxsize=\"3em\">∣</mo><mfrac><mrow><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>A</mi></msub><mo>+</mo><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>B</mi></msub></mrow><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>M</mi></msub><mo>+</mo><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>N</mi></msub></mrow><mn>2</mn></mfrac><mo fence=\"false\" stretchy=\"true\" minsize=\"3em\" maxsize=\"3em\">∣</mo></mrow><annotation encoding=\"application/x-tex\">d = \\Bigg | \\frac{\\vec{r}_A+\\vec{r}_B}{2} - \\frac{\\vec{r}_M+\\vec{r}_N}{2} \\Bigg |</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.012em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.762em;\"><span style=\"top:-2.566em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.164em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\"top:-4.972em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.391em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.012em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.391em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.762em;\"><span style=\"top:-2.566em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.164em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\"top:-4.972em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"jxyJXbJgwB"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"For a pole-dipole survey, this would be:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"EYyiWWqa5K"}],"key":"LnmsTY8EuQ"},{"type":"math","value":"\\, \nd = \\Bigg | \\, \\vec{r}_A - \\frac{\\vec{r}_M+\\vec{r}_N}{2} \\Bigg |","position":{"start":{"line":15,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext> </mtext><mi>d</mi><mo>=</mo><mo fence=\"false\" stretchy=\"true\" minsize=\"3em\" maxsize=\"3em\">∣</mo><mtext> </mtext><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>A</mi></msub><mo>−</mo><mfrac><mrow><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>M</mi></msub><mo>+</mo><msub><mover accent=\"true\"><mi>r</mi><mo>⃗</mo></mover><mi>N</mi></msub></mrow><mn>2</mn></mfrac><mo fence=\"false\" stretchy=\"true\" minsize=\"3em\" maxsize=\"3em\">∣</mo></mrow><annotation encoding=\"application/x-tex\">\\, \nd = \\Bigg | \\, \\vec{r}_A - \\frac{\\vec{r}_M+\\vec{r}_N}{2} \\Bigg |</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.012em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.762em;\"><span style=\"top:-2.566em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.164em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\"top:-4.972em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.012em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.391em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.762em;\"><span style=\"top:-2.566em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.164em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span style=\"height:1.816em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\"top:-4.972em;\"><span class=\"pstrut\" style=\"height:3.816em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span>","enumerator":"2","key":"OJASE0H1eg"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Pole sources penetrate the Earth more deeply and produce smoother fields within the source region, so we can get away with a larger layer thickness for the top layer but we need to discretize deeper. But in general, it is easy to make your your top layer equal to 10% of your smallest distance. And to make the depth to the lower layer equal to the largest distance.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"D7nBUPyPN5"}],"key":"pyvsyh7kiZ"}],"data":{"type":"notebook-content"},"key":"pJOkqatvp7"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Use Wenner electrode spacings to set discretization parameters\nprint(\"AB separations: {}\".format(AB_separations))\ndepth_min = 5.0  # top layer thickness\ndepth_max = np.max(AB_separations / 2)  # depth to lowest layer\ngeometric_factor = 1.1  # rate of thickness increase","key":"uhsaLCGqBf"},{"type":"output","id":"Vh2J5IX117OO7EKWPwaRS","data":[{"name":"stdout","output_type":"stream","text":"AB separations: [  60.  120.  180.  240.  300.  360.  420.  480.  540.  600.  660.  720.\n  780.  840.  900.  960. 1020. 1080. 1140. 1200. 1260. 1320. 1380. 1440.\n 1500.]\n"}],"key":"CsLcUNCgyT"}],"data":{"type":"notebook-code"},"key":"XjokW3O7IV"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Increase subsequent layer thicknesses by the geometric factors until\n# it reaches the maximum layer depth.\nlayer_thicknesses = [depth_min]\nwhile np.sum(layer_thicknesses) < depth_max:\n    layer_thicknesses.append(geometric_factor * layer_thicknesses[-1])\n\nn_layers = len(layer_thicknesses) + 1  # Number of layers","key":"VlowwElKow"},{"type":"output","id":"l_5b4hSB0DPASR3SQzSCD","data":[],"key":"o8ataQx5Tx"}],"data":{"type":"notebook-code"},"key":"BDJfUi7JP0"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define a Model and Mapping","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G3YONl6Blq"}],"identifier":"define-a-model-and-mapping","label":"Define a Model and Mapping","html_id":"define-a-model-and-mapping","implicit":true,"key":"wPVLUlvFzL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Recall from the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sZdIprQkJt"},{"type":"link","url":"/fwd-dcr-1d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Forward Simulation of 1D Sounding DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QCEVqFQq0f"}],"urlSource":"fwd_dcr_1d.ipynb","internal":true,"dataUrl":"/fwd-dcr-1d.json","protocol":"file","key":"KpVHMrD2se"},{"type":"text","value":" tutorial that the ‘model’ is not necessarily synonymous with physical property values. And that we need to define a mapping from the model to the set of input parameters required by the forward simulation. When inverting to recover electrical resistivities (or conductivities), it is best to use the log-value, as electrical resistivities (or conductivities) of rocks span many order of magnitude.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jPJbaNAuKq"}],"key":"PqmBTjVQKR"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, the model defines the log-resistivity values for a defined set of subsurface layers. And we use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Hp5Dw4lkmj"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.ExpMap.html#simpeg.maps.expmap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG.maps.ExpMap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rmfwktRTbV"}],"urlSource":"myst:SimPEG#SimPEG.maps.ExpMap","internal":false,"protocol":"myst","key":"iPjnfgw3gF"},{"type":"text","value":" to map from the model parameters to the resistivity values required by the forward simulation.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ssQI6Cwd7M"}],"key":"tI1N8wgu6r"}],"data":{"type":"notebook-content"},"key":"J0M5p2SVX7"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"log_resistivity_map = maps.ExpMap(nP=n_layers)","key":"s3xVhh9VLB"},{"type":"output","id":"XzlMWyyDOg2nl4lbn8gFB","data":[],"key":"w5zXeu8gSz"}],"data":{"type":"notebook-code"},"key":"PGPzdyHdU2"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Starting/Reference Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"do5IYFOYsE"}],"identifier":"starting-reference-models","label":"Starting/Reference Models","html_id":"starting-reference-models","implicit":true,"key":"h5Q4GAH1ha"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EiYwGlyBTT"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"starting model","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nLPLN3wGLp"}],"key":"ZE8lmoz50N"},{"type":"text","value":" defines a reasonable starting point for the inversion. Because electromagnetic problems are non-linear, your choice in starting model does have an impact on the recovered model. For DC resistivity inversion, we generally choose our starting model based on apparent resistivities. For the tutorial example, the apparent resistivities were near 1000 ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fXVHZPm6aw"},{"type":"inlineMath","value":"\\Omega m","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"mq28zLQ5kA"},{"type":"text","value":". It should be noted that the staring model ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SYnnxr0RKG"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"cannot be vector of zeros,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IKpIcwsQrP"}],"key":"vfXFBvso5u"},{"type":"text","value":" otherwise the inversion will be unable to compute a gradient direction at the first iteration.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XqICBGCZ9K"}],"key":"uOaDzO71YU"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gntqu8Vtxg"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"reference model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oLYBui0SpL"}],"key":"ZbXsxtAk9V"},{"type":"text","value":" is used to include a-priori information. The impact of the reference model on the inversion will be discussed in another tutorial. The reference model for basic inversion approaches is either zero or equal to the starting model.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pkKfEg5Bgu"}],"key":"w96tSuuhh9"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Notice that the length of the starting and reference models is equal to the number of model parameters!!!","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Jxj9xWI4Xi"}],"key":"OZbxBhBxtC"}],"data":{"type":"notebook-content"},"key":"S817pVy4Lb"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Starting model is log-resistivity values (Ohmm)\nstarting_resistivity_model = np.log(1e3 * np.ones(n_layers))\n\n# Reference model is also log-resistivity values (Ohmm)\nreference_resistivity_model = starting_resistivity_model.copy()","key":"uz5um1NCCC"},{"type":"output","id":"YwQ1sBMbHvBwW5Qk_FwpX","data":[],"key":"tezIQvtmJ0"}],"data":{"type":"notebook-code"},"key":"X3Gv6bPapz"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QOc0YRI2OB"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation","implicit":true,"key":"onLhF3SBxx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A simulation object defining the forward problem is required in order to predict data and calculate misfits for recovered models. A comprehensive description of the simulation object for 1D DC resistivity was discussed in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wEzZUYy1rU"},{"type":"link","url":"/fwd-dcr-1d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1D Forward Simulation of DC Resistivity Data for a Single Sounding","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ioiXlRM0J2"}],"urlSource":"fwd_dcr_1d.ipynb","internal":true,"dataUrl":"/fwd-dcr-1d.json","protocol":"file","key":"SsZ1XlbUOI"},{"type":"text","value":" tutorial. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LVdmnqRN1U"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.resistivity.Simulation1DLayers.html#simpeg.electromagnetics.static.resistivity.simulation1dlayers","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation1DLayers","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CqCQPxe5hz"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity.Simulation1DLayers","internal":false,"protocol":"myst","key":"ZW8gJt3R5c"},{"type":"text","value":" which simulates the data according to a 1D Hankel transform solution.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aQ32rClbcA"}],"key":"TMN8lb9QAO"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The layer thicknesses are a static property of the simulation, and we set them using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"w14uvXdiMd"},{"type":"inlineCode","value":"thicknessess","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZXntKkt5AQ"},{"type":"text","value":" keyword argument. Since our model consists of log-resistivities, we use ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WC8GgErfZI"},{"type":"inlineCode","value":"rhoMap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uWlvjFwgPm"},{"type":"text","value":" to set the mapping from the model to the layer resistivities.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rOkdCUZcrQ"}],"key":"G1TDXyeyEq"}],"data":{"type":"notebook-content"},"key":"Hk64tvSCzy"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"simulation_L2 = dc.simulation_1d.Simulation1DLayers(\n    survey=survey,\n    rhoMap=log_resistivity_map,\n    thicknesses=layer_thicknesses,\n)","key":"eAJtjHkgBo"},{"type":"output","id":"t69lZ5GU85tr6toTMPmX2","data":[],"key":"qyJAplIuxI"}],"data":{"type":"notebook-code"},"key":"gD4XIrSXyl"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dkoAJgnNkg"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit","implicit":true,"key":"UlJFWPFFP2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"To understand the role of the data misfit in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"khGZZZ3MNj"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yZmSb1rSzw"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"mp7dUIt2Mj"},{"type":"text","value":".\nHere, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rY9UAX3Xk7"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.data_misfit.L2DataMisfit.html#simpeg.data_misfit.l2datamisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"L2DataMisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"G7Ya2Nwoi1"}],"urlSource":"myst:SimPEG#SimPEG.data_misfit.L2DataMisfit","internal":false,"protocol":"myst","key":"TWDkweDv0Z"},{"type":"text","value":" class to define the data misfit. In this case, the data misfit is the L2 norm of the weighted residual between the observed data and the data predicted for a given model. When instantiating the data misfit object within SimPEG, we must assign an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"omx4IDwS5s"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wcxq2byuPE"}],"key":"nuBVwfuCJy"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VsY4VhVPU2"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simulation object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rTkYhBhigU"}],"key":"PVzI4Sgn8O"},{"type":"text","value":" as properties.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L6QbyXnnED"}],"key":"bygUjojL8S"}],"data":{"type":"notebook-content"},"key":"cMYWAyOV1V"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dmis_L2 = data_misfit.L2DataMisfit(simulation=simulation_L2, data=data_object)","key":"GoEDQtF9E9"},{"type":"output","id":"KoCcvLrPAIhcEBz8zutxo","data":[],"key":"gnkjVbHWbV"}],"data":{"type":"notebook-code"},"key":"B28qzhYbcu"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EkZQLpcTjc"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization","implicit":true,"key":"i9VOfm7rIq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To understand the role of the regularization in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bsQhDZp2M9"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZjKw5CpnIz"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","key":"xopR0rvzCO"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bBHYvIJaR2"}],"key":"Y6guhiIGha"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To define the regularization within SimPEG, we must define a 1D ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qTXANKQRDL"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TensorMesh.html#discretize.tensormesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"tensor mesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Pa9j4LdJBm"}],"urlSource":"myst:discretize#discretize.TensorMesh","internal":false,"protocol":"myst","key":"xEFwx4Aygf"},{"type":"text","value":". Meshes are designed using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"x8S6ZAW0JV"},{"type":"link","url":"https://discretize.simpeg.xyz","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"discretize package","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nmyteJ76YO"}],"urlSource":"https://discretize.simpeg.xyz","key":"iXn92TmFOn"},{"type":"text","value":". Whereas layer ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"APz4tJBepH"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"thicknesses","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sWJydSFYdk"}],"key":"yUJ08MznIH"},{"type":"text","value":" and our ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"S83NEa1n6N"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MPisiKN8BT"}],"key":"UiskptUW8a"},{"type":"text","value":" are defined from our top-layer down, tensor meshes are defined from the bottom up. So to define a 1D tensor mesh for the regularization, we:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"L9ucRYuPYh"}],"key":"E5iKaSghwm"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"add an extra layer to the end of our thicknesses so that the number of cells in the 1D mesh equals the number of model parameters","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M2Nw0Srmih"}],"key":"OplHxSlfZc"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"reverse the order so that the model parameters in the regularization match up with the appropriate cell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Lcop9tRGSz"}],"key":"tioRX2KqeT"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"define the tensor mesh from the cell widths","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nqbwAuWjQV"}],"key":"o0VUeGgl0L"}],"key":"Lb9flKmNdz"}],"data":{"type":"notebook-content"},"key":"Vkvxyp0oYk"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define 1D cell widths\nh = np.r_[layer_thicknesses, layer_thicknesses[-1]]\nh = np.flipud(h)\n\n# Create regularization mesh\nregularization_mesh = TensorMesh([h], \"N\")\nprint(regularization_mesh)","key":"qyC0xjxhNl"},{"type":"output","id":"7slMEkyGlaKy4IKc9MrCu","data":[{"name":"stdout","output_type":"stream","text":"\n  TensorMesh: 31 cells\n\n                      MESH EXTENT             CELL WIDTH      FACTOR\n  dir    nC        min           max         min       max      max\n  ---   ---  ---------------------------  ------------------  ------\n   x     31       -901.79         -0.00      5.00     79.32    1.10\n\n\n"}],"key":"YOgTxesi5y"}],"data":{"type":"notebook-code"},"key":"IRQkbDOuu2"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"By default, the regularization acts on the model parameters. In this case, the model parameters are the log-resistivities, not the electric resistivities!!! Here, we use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SL3Xigca4c"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.regularization.WeightedLeastSquares.html#simpeg.regularization.weightedleastsquares","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"WeightedLeastSquares","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lGySUKOlLr"}],"urlSource":"myst:SimPEG#SimPEG.regularization.WeightedLeastSquares","internal":false,"protocol":"myst","key":"YUrFejkMl6"},{"type":"text","value":" regularization class to constrain the inversion result. Here, length scale along x are used to balance the smallness and smoothness terms; yes, x is smoothness along the vertical direction. And the reference model is only applied to the smallness term. If we wanted to apply the regularization to a function of the model parameters, we would need to set an approprate mapping object using the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uiloXVVLhh"},{"type":"inlineCode","value":"mapping","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u5O2fRFalp"},{"type":"text","value":" keyword argument.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZDTkb81dL1"}],"key":"hZ9itKRbgz"}],"data":{"type":"notebook-content"},"key":"LMhMsK4YK4"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"reg_L2 = regularization.WeightedLeastSquares(\n    regularization_mesh,\n    length_scale_x=1.0,\n    reference_model=reference_resistivity_model,\n    reference_model_in_smooth=False,\n)","key":"qv9p3zmipW"},{"type":"output","id":"fJZXZgSL8prjwv1TBluMj","data":[],"key":"Rjdyf27jT4"}],"data":{"type":"notebook-code"},"key":"i7XxF8E6S1"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FdXol2DDAd"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm","implicit":true,"key":"nWzz2Qb4xL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To understand the role of the optimization algorithm in the inversion, please visit this online resource. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LyFibeOySA"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.optimization.InexactGaussNewton.html#simpeg.optimization.inexactgaussnewton","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"InexactGaussNewton","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"C6LDFYMDLd"}],"urlSource":"myst:SimPEG#SimPEG.optimization.InexactGaussNewton","internal":false,"protocol":"myst","key":"r8nP5UfJ4t"},{"type":"text","value":" class to solve the optimization problem using the inexact Gauss Newton with conjugate gradient solver. Reasonable default values have generally been set for the properties of each optimization class. However, the user may choose to set custom values; e.g. the accuracy tolerance for the conjugate gradient solver or the number of line searches.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bgBowDsSDf"}],"key":"vKpqmi1F2W"}],"data":{"type":"notebook-content"},"key":"uYZAjaZuMH"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"opt_L2 = optimization.InexactGaussNewton(\n    maxIter=100, maxIterLS=20, maxIterCG=20, tolCG=1e-3\n)","key":"erPTOFzlJQ"},{"type":"output","id":"2UgZP4s3duaHxlvzWPKKE","data":[],"key":"OP7N3PUWNu"}],"data":{"type":"notebook-code"},"key":"T9sFJmUreu"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G8LD58fjX2"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem","implicit":true,"key":"nxeW4QrrJt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"McdAOlRA9l"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.inverse_problem.BaseInvProblem.html#simpeg.inverse_problem.baseinvproblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInvProblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qDp3Wf6106"}],"urlSource":"myst:SimPEG#SimPEG.inverse_problem.BaseInvProblem","internal":false,"protocol":"myst","key":"YluS1k5Uwo"},{"type":"text","value":" class to fully define the inverse problem that is solved at each beta (trade-off parameter) iteration. The inverse problem requires appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"saqU7ICQuW"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data misfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mKrFK03JfZ"}],"key":"yFXX1p2YIS"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BNI9DNvPt1"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"regularization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XUfaKrOmJv"}],"key":"sV2h1bK0ir"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iBZGt6zkQS"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"optimization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"E7fx0D33Mw"}],"key":"YtvB46dzuM"},{"type":"text","value":" objects.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zRNkNodMQQ"}],"key":"f4FFILX0uJ"}],"data":{"type":"notebook-content"},"key":"K6ytB232VR"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_L2 = inverse_problem.BaseInvProblem(dmis_L2, reg_L2, opt_L2)","key":"HMmDo8xkcI"},{"type":"output","id":"4BeRFyteJ5oVYmTNBS8jx","data":[],"key":"YYBeVIoOnQ"}],"data":{"type":"notebook-code"},"key":"zyXcVFEZxD"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QcxYzmmuIv"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives","implicit":true,"key":"rAsUTJRgMf"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Directives represent operations that are carried out during the inversion. Here, we apply common directives for weighted least-squares inversion of DC resistivity data and describe their roles. These are:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qLDHVbWJjI"}],"key":"LiVJS3nWhf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qM9l9pA7W0"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","error":true,"key":"fz0XqNG8Td"},{"type":"text","value":": apply sensitivity weighting to counteract the natural tendancy of DC resistivity inversion to place materials near the electrodes. Since the problem is non-linear and the sensitivities are updated with every model, we set ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"D3FSmokNNH"},{"type":"inlineCode","value":"every_iteration=True","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N9wCQzdz1P"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"k431ECN6Nd"}],"key":"EKwoiKbgrF"}],"key":"JBVkl5CeDC"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dT5IePxSMw"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","error":true,"key":"fvJs345jCG"},{"type":"text","value":": Apply Jacobi preconditioner when solving optimization problem to reduce the number of conjugate gradient iterations. We set ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cfh0zeuYjI"},{"type":"inlineCode","value":"update_every_iteration=True","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"k5kRFfmaUH"},{"type":"text","value":" because the ideal preconditioner is model-dependent.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ILd1m2VBDS"}],"key":"ffj9gNBjCS"}],"key":"mkPKxrEkcv"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uDZGzRFNVl"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","error":true,"key":"cemWLUrl4Q"},{"type":"text","value":": Compute and set starting trade-off parameter (beta) based on largest eigenvalues.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JHHOOOgjrm"}],"key":"JaZ1DdBlSE"}],"key":"fbq1q1xpl8"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaSchedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"t6CXn21MPT"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaSchedule","error":true,"key":"B1N7HUOWoA"},{"type":"text","value":": Size reduction of the trade-off parameter at every beta iteration, and the number of Gauss-Newton iterations for each beta. In general, a ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eIgBg3YcIb"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"N1vPytUq0b"},{"type":"text","value":" between 1.5 and 2.5, and ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"lAr4Oi98BR"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"tXCZMJYi2q"},{"type":"text","value":" of 2 or 3 works well for DC resistivity inversion. Cooling beta too quickly will result in portions of the model getting trapped in local minima. And we will not be finding the solution that minimizes the optimization problem if the cooling rate is too small.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"CGSq9X2MW9"}],"key":"Vy9mfolZgA"}],"key":"xJJaUi8Ipl"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.TargetMisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"juB7165eyI"}],"urlSource":"myst:SimPEG#SimPEG.directives.TargetMisfit","error":true,"key":"G460uN84rh"},{"type":"text","value":": Terminates the inversion when the data misfit equals the target misfit. A ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"HLkZKCqNlW"},{"type":"inlineCode","value":"chifact=1","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"bK2R84w0Ey"},{"type":"text","value":" terminates the inversion when the data misfit equals the number of data.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"UtvxTxbFEs"}],"key":"MWWcDadSvY"}],"key":"mjogn7FB39"}],"key":"lWzA3OODZJ"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"The directive objects are organized in a ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"X1c7lkFNOs"},{"type":"inlineCode","value":"list","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"msVwHlEw92"},{"type":"text","value":". Upon starting the inversion or updating the recovered model at each iteration, the inversion will call each directive within the list ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"aMhtpldjz1"},{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"in order","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"lBq8NdkeNI"}],"key":"vb4iGLEyGJ"},{"type":"text","value":". The order of the directives matters, and SimPEG will throw an error if directives are organized into an improper order. Some directives, like the ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"V4HIMrAsRs"},{"type":"inlineCode","value":"BetaEstimate_ByEig","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"AMtQVaY4D1"},{"type":"text","value":" are only used when starting the inversion. Other directives, like ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Ulbej4yyqu"},{"type":"inlineCode","value":"UpdatePreconditionner","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"a3f4rNjQ0a"},{"type":"text","value":", are used whenever the model is updated.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"VEARiX9VcE"}],"key":"Upb3gMoqc1"}],"data":{"type":"notebook-content"},"key":"Mg1BiPQl7K"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights = directives.UpdateSensitivityWeights(every_iteration=True)\nupdate_jacobi = directives.UpdatePreconditioner(update_every_iteration=True)\nstarting_beta = directives.BetaEstimate_ByEig(beta0_ratio=5)\nbeta_schedule = directives.BetaSchedule(coolingFactor=2.0, coolingRate=2)\ntarget_misfit = directives.TargetMisfit(chifact=1.0)\n\ndirectives_list_L2 = [\n    sensitivity_weights,\n    update_jacobi,\n    starting_beta,\n    beta_schedule,\n    target_misfit,\n]","key":"csCEJvhITz"},{"type":"output","id":"o5VvPHUIpW29k2lb4sEtZ","data":[],"key":"KABZpYZ3aJ"}],"data":{"type":"notebook-code"},"key":"fJvCuesa9R"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gQ4TI3qSUH"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion","implicit":true,"key":"El4MBrOCiS"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We define the inversion using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OClNfzdNqf"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.inversion.BaseInversion.html#simpeg.inversion.baseinversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rm3CiVFx8c"}],"urlSource":"myst:SimPEG#SimPEG.inversion.BaseInversion","internal":false,"protocol":"myst","key":"RysbXrqGa7"},{"type":"text","value":" class. The inversion class must be instatiated with an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eqjMStxqsR"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"inverse problem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NVhtLT8xgY"}],"key":"VRuH9XnJh8"},{"type":"text","value":" object and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jzbKQZkaDS"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"directives list","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AfdJwvPB3a"}],"key":"DNteHD3jv7"},{"type":"text","value":". The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xEpPSBGRVe"},{"type":"inlineCode","value":"run","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WOPhGrEcwf"},{"type":"text","value":" method, along with a starting model, is respondible for running the inversion. The output is a 1D numpy.ndarray containing the recovered model parameters","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bhKCKFqtJ0"}],"key":"I5i4gbaWXo"}],"data":{"type":"notebook-content"},"key":"XdeTqlpvYq"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Here we combine the inverse problem and the set of directives\ninv_L2 = inversion.BaseInversion(inv_prob_L2, directives_list_L2)\n\n# Run the inversion\nrecovered_model_L2 = inv_L2.run(starting_resistivity_model)","key":"VWGsvaU8lF"},{"type":"output","id":"Jx_g4XE1A1ImxUykqP6nn","data":[{"name":"stdout","output_type":"stream","text":"\n                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation1DLayers problem***\n                        \nmodel has any nan: 0\n============================ Inexact Gauss Newton ============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  4.41e+02  7.12e+02  0.00e+00  7.12e+02    9.41e+02      0              \n   1  4.41e+02  5.36e+02  1.72e-01  6.12e+02    2.35e+01      0              \n   2  2.20e+02  5.33e+02  1.79e-01  5.73e+02    3.77e+02      0   Skip BFGS  \n   3  2.20e+02  4.41e+02  4.85e-01  5.47e+02    1.17e+01      0              \n   4  1.10e+02  4.39e+02  4.95e-01  4.93e+02    3.15e+02      0   Skip BFGS  \n   5  1.10e+02  3.42e+02  1.13e+00  4.67e+02    9.61e+00      0              \n   6  5.51e+01  3.41e+02  1.15e+00  4.04e+02    2.42e+02      0   Skip BFGS  \n   7  5.51e+01  2.54e+02  2.34e+00  3.83e+02    9.11e+00      0              \n   8  2.75e+01  2.55e+02  2.32e+00  3.19e+02    1.74e+02      0              \n   9  2.75e+01  1.81e+02  4.48e+00  3.04e+02    1.23e+01      0              \n  10  1.38e+01  1.84e+02  4.33e+00  2.44e+02    1.21e+02      0              \n  11  1.38e+01  1.22e+02  8.14e+00  2.35e+02    1.65e+01      0              \n  12  6.89e+00  1.29e+02  7.60e+00  1.81e+02    8.23e+01      0              \n  13  6.89e+00  8.05e+01  1.39e+01  1.77e+02    2.02e+01      0              \n  14  3.44e+00  8.77e+01  1.26e+01  1.31e+02    5.54e+01      0              \n  15  3.44e+00  5.28e+01  2.24e+01  1.30e+02    2.31e+01      0              \n  16  1.72e+00  5.95e+01  1.98e+01  9.35e+01    3.69e+01      0              \n  17  1.72e+00  3.57e+01  3.42e+01  9.45e+01    2.53e+01      0              \n  18  8.61e-01  4.10e+01  2.96e+01  6.65e+01    2.40e+01      0              \n  19  8.61e-01  2.55e+01  4.99e+01  6.84e+01    2.68e+01      0              \n  20  4.30e-01  2.94e+01  4.26e+01  4.77e+01    1.50e+01      0              \n  21  4.30e-01  1.94e+01  6.65e+01  4.81e+01    2.64e+01      0              \n  22  2.15e-01  2.13e+01  6.17e+01  3.46e+01    8.30e+00      0              \n  23  2.15e-01  1.58e+01  7.55e+01  3.21e+01    1.97e+01      0              \n  24  1.08e-01  1.57e+01  7.45e+01  2.38e+01    4.65e+00      0              \n  25  1.08e-01  1.32e+01  8.62e+01  2.25e+01    1.48e+01      0              \n  26  5.38e-02  1.32e+01  8.55e+01  1.78e+01    2.16e+00      0              \n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 7.1256e+01\n1 : |xc-x_last| = 4.8895e-01 <= tolX*(1+|x0|) = 3.9461e+00\n0 : |proj(x-g)-x|    = 2.1586e+00 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 2.1586e+00 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =     100    <= iter          =     27\n------------------------- DONE! -------------------------\n"}],"key":"O3BtIZdu6D"}],"data":{"type":"notebook-code"},"key":"IbTMhH2hwL"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Observed and Predicted Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DiOPFS1jNt"}],"identifier":"plot-observed-and-predicted-data","label":"Plot Observed and Predicted Data","html_id":"plot-observed-and-predicted-data","implicit":true,"key":"OUuXHNuSWM"}],"data":{"type":"notebook-content"},"key":"X3OtKY2T2i"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot the true and apparent resistivities on a sounding curve\nfig = plt.figure(figsize=(11, 5))\nax1 = fig.add_axes([0.2, 0.1, 0.6, 0.8])\nax1.semilogy(AB_separations / 2, dobs, \"k\")\nax1.semilogy(AB_separations / 2, simulation_L2.dpred(recovered_model_L2), \"b\")\nax1.grid(which=\"both\")\nax1.set_xlabel(\"AB/2 (m)\")\nax1.set_ylabel(r\"Apparent Resistivity ($\\Omega m$)\")\nax1.legend([\"Observed\", \"L2 Inversion\"])\nplt.show()","key":"jnuwzx66NZ"},{"type":"output","id":"1IdStPRhBZe9J5gXoaSNr","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"16de91853dd24e44f8143cc9a511fa28","path":"/user-tutorials/build/16de91853dd24e44f8143cc9a511fa28.png"},"text/plain":{"content":"<Figure size 1100x500 with 1 Axes>","content_type":"text/plain"}}}],"key":"BH2UPp8Bea"}],"data":{"type":"notebook-code"},"key":"Nq1qxHNN7R"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Recovered Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RiIxV23ZgH"}],"identifier":"plot-the-recovered-model","label":"Plot the Recovered Model","html_id":"plot-the-recovered-model","implicit":true,"key":"F1tIjXeXfv"}],"data":{"type":"notebook-content"},"key":"bA5pbGxlOl"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define true model and layer thicknesses\ntrue_resistivities = np.r_[1e3, 4e3, 2e2]\ntrue_layers = np.r_[100.0, 100.0]","key":"Pg5w1M4IAC"},{"type":"output","id":"xNwFGvFDQA9_0iIl44g5P","data":[],"key":"a2tBcSzHKm"}],"data":{"type":"notebook-code"},"key":"aadrwH5DgC"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot true model and recovered model\nfig = plt.figure(figsize=(6, 6))\n\nax1 = fig.add_axes([0.2, 0.15, 0.7, 0.7])\nplot_1d_layer_model(true_layers, true_resistivities, ax=ax1, color=\"k\")\nplot_1d_layer_model(\n    layer_thicknesses, log_resistivity_map * recovered_model_L2, ax=ax1, color=\"b\"\n)\nx_min, x_max = true_resistivities.min(), true_resistivities.max()\nax1.set_xlim(0.9 * x_min, 1.1 * x_max)\nax1.grid()\nax1.set_xlabel(r\"Resistivity ($\\Omega m$)\")\nax1.legend([\"True Model\", \"L2-Model\"])\nplt.show()","key":"t36SISj66H"},{"type":"output","id":"tPH8CJlcHfICnPR0z7kS7","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8c387eb044e63023eca82792496acbbb","path":"/user-tutorials/build/8c387eb044e63023eca82792496acbbb.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"KIfP4Se9hu"}],"data":{"type":"notebook-code"},"key":"O7Zbe6MK2l"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Iteratively Re-weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r8OwSsKocz"}],"identifier":"iteratively-re-weighted-least-squares-inversion","label":"Iteratively Re-weighted Least-Squares Inversion","html_id":"iteratively-re-weighted-least-squares-inversion","implicit":true,"key":"KccGdGYo9B"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the iteratively reweighted least-squares (IRLS) inversion approach to recover sparse and/or blocky models on the set layers.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dyjtqHpBKx"}],"key":"gbVC9tsRFS"}],"data":{"type":"notebook-content"},"key":"wwEnjICPZT"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WQU6eDvWPe"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation-1","implicit":true,"key":"Qez1d8Xxyo"}],"data":{"type":"notebook-content"},"key":"P2BXcI23KM"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"simulation_irls = dc.simulation_1d.Simulation1DLayers(\n    survey=survey,\n    rhoMap=log_resistivity_map,\n    thicknesses=layer_thicknesses,\n)","key":"E0yDhEywlU"},{"type":"output","id":"4X1qktyHeKgYqyJJrPepd","data":[],"key":"lyh27Zhxit"}],"data":{"type":"notebook-code"},"key":"qTOl49uDo5"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F6GsOg53Gf"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit-1","implicit":true,"key":"INB9WJKkex"}],"data":{"type":"notebook-content"},"key":"oXNHzt4KBX"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dmis_irls = data_misfit.L2DataMisfit(simulation=simulation_irls, data=data_object)","key":"x9WTpxEZln"},{"type":"output","id":"kg2u-UnJDSFGr8rqmxby3","data":[],"key":"jTR7BOom0V"}],"data":{"type":"notebook-code"},"key":"tNr3fLsnn2"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uOWxNlKcEL"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization-1","implicit":true,"key":"uflrycbItq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rWeNzrnyZ9"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.regularization.Sparse.html#simpeg.regularization.sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bEVxLUkkT0"}],"urlSource":"myst:SimPEG#SimPEG.regularization.Sparse","internal":false,"protocol":"myst","key":"ZbbJT7m7HL"},{"type":"text","value":" regularization class to constrain the inversion result using an IRLS approach. Here, the scaling constants that balance the smallness and smoothness terms are set directly. Equal emphasis on smallness and smoothness is generally applied by using the inverse square of the smallest cell dimension. The reference model is only applied to the smallness term; which is redundant for the tutorial example since we have set the reference model to an array of zeros. Here, we apply a 1-norm to the smallness term and a 1-norm to first-order smoothness along the x (vertical direction).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fOmobu80WT"}],"key":"pMCJvpvcEs"}],"data":{"type":"notebook-content"},"key":"CUN0Xzi15X"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"reg_irls = regularization.Sparse(\n    regularization_mesh,\n    alpha_s=0.1,\n    alpha_x=1,\n    reference_model_in_smooth=False,\n    norms=[1.0, 1.0],\n)","key":"AY5kXKGDF4"},{"type":"output","id":"DTNUp_RzuZGH8wsHIflBN","data":[],"key":"CfVNXKvCHr"}],"data":{"type":"notebook-code"},"key":"M4N3xGaSNu"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jcdnkNovG6"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm-1","implicit":true,"key":"TMC4VzVsce"}],"data":{"type":"notebook-content"},"key":"lLvQkD1ekb"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"opt_irls = optimization.InexactGaussNewton(\n    maxIter=100, maxIterLS=20, maxIterCG=30, tolCG=1e-3\n)","key":"JvU9YXdarj"},{"type":"output","id":"q-lLQvR-QiRLoQxjUBgkt","data":[],"key":"O9MCp54mqG"}],"data":{"type":"notebook-code"},"key":"OboOjGMSjP"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FwFdmOPooq"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem-1","implicit":true,"key":"cFs9HiwaD8"}],"data":{"type":"notebook-content"},"key":"dkC5dIePqq"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_irls = inverse_problem.BaseInvProblem(dmis_irls, reg_irls, opt_irls)","key":"P5xPr3CzFa"},{"type":"output","id":"0HDqMKO5xN2TvceZyq_Uo","data":[],"key":"Y9HlsrqGgI"}],"data":{"type":"notebook-code"},"key":"QxRGTdfVlQ"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jNkZoU14KD"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives-1","implicit":true,"key":"wySgTllu08"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we create common directives for IRLS inversion of DC resistivity data and describe their roles. In additon to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"W2DmR1S4Bk"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XwkNsb0Zx7"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","error":true,"key":"mgQ1nFMa9k"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WZ4phchPHf"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SkX0QhK2NV"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","error":true,"key":"kSHaYD50jU"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tEihL3DeMJ"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Bqyoilkpl9"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","error":true,"key":"bEMmowdx0K"},{"type":"text","value":"  directives (described before), inversion with sparse-norms requires the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gv3ywaZSdk"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.Update_IRLS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Update_IRLS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xh8asrFSnu"}],"urlSource":"myst:SimPEG#SimPEG.directives.Update_IRLS","error":true,"key":"Ruxu5JZOfC"},{"type":"text","value":" directive.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GnVCFCI1kF"}],"key":"NtbIOyOjyV"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You will notice that we don’t use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BYY8CGPedk"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaSchedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dbA9CVe1oA"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaSchedule","error":true,"key":"CQNRw2lG8V"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"clyxHelM4x"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.TargetMisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"v9EQE8mCT9"}],"urlSource":"myst:SimPEG#SimPEG.directives.TargetMisfit","error":true,"key":"VDKC5NiVTF"},{"type":"text","value":" directives. Here, the beta cooling schedule is set in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZckErw0u11"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.Update_IRLS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Update_IRLS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dahMgf8qn8"}],"urlSource":"myst:SimPEG#SimPEG.directives.Update_IRLS","error":true,"key":"WJyoZq4Hlj"},{"type":"text","value":" directive using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HJMNJzFRhH"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oKchIJdipx"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uYdgupqFCB"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Fag9wg214e"},{"type":"text","value":" properties. The target misfit for the L2 portion of the IRLS approach is set with the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FQNwlm5Juo"},{"type":"inlineCode","value":"chifact_start","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FRw9KB9Mi2"},{"type":"text","value":" property.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"t1O8chXCwt"}],"key":"aFnCHuiTJJ"}],"data":{"type":"notebook-content"},"key":"L1AQJqxROZ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights_irls = directives.UpdateSensitivityWeights(every_iteration=True)\nstarting_beta_irls = directives.BetaEstimate_ByEig(beta0_ratio=1)\nupdate_jacobi_irls = directives.UpdatePreconditioner(update_every_iteration=True)\nupdate_irls = directives.Update_IRLS(\n    coolingFactor=2,\n    coolingRate=2,\n    f_min_change=1e-4,\n    max_irls_iterations=30,\n    chifact_start=1.0,\n)\n\ndirectives_list_irls = [\n    update_irls,\n    sensitivity_weights_irls,\n    starting_beta_irls,\n    update_jacobi_irls,\n]","key":"VyrkjtDpro"},{"type":"output","id":"CQi8cWpsidxVqyb4kb7yU","data":[],"key":"PCDFWd77u4"}],"data":{"type":"notebook-code"},"key":"TqVFnjPZIR"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cpQ14bnZAJ"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion-1","implicit":true,"key":"J1HveklRaO"}],"data":{"type":"notebook-content"},"key":"Ob97fPH88W"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Here we combine the inverse problem and the set of directives\ninv_irls = inversion.BaseInversion(inv_prob_irls, directives_list_irls)\n\n# Run the inversion\nrecovered_model_irls = inv_irls.run(starting_resistivity_model)","key":"OqihJw1yh2"},{"type":"output","id":"R8cr5OJIMq12-kCCUWX3q","data":[{"name":"stdout","output_type":"stream","text":"SimPEG.InvProblem will set Regularization.reference_model to m0.\nSimPEG.InvProblem will set Regularization.reference_model to m0.\n\n                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation1DLayers problem***\n                        \nmodel has any nan: 0\n============================ Inexact Gauss Newton ============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  9.89e+02  7.12e+02  0.00e+00  7.12e+02    9.41e+02      0              \n   1  9.89e+02  3.30e+02  1.26e-01  4.54e+02    2.24e+01      0              \n   2  4.94e+02  3.26e+02  1.29e-01  3.90e+02    2.31e+02      0   Skip BFGS  \n   3  4.94e+02  2.42e+02  2.60e-01  3.70e+02    9.47e+00      0              \n   4  2.47e+02  2.43e+02  2.57e-01  3.07e+02    1.65e+02      0              \n   5  2.47e+02  1.70e+02  4.94e-01  2.92e+02    1.30e+01      0              \n   6  1.24e+02  1.74e+02  4.75e-01  2.33e+02    1.14e+02      0              \n   7  1.24e+02  1.15e+02  8.90e-01  2.25e+02    1.72e+01      0              \n   8  6.18e+01  1.21e+02  8.26e-01  1.72e+02    7.74e+01      0              \n   9  6.18e+01  7.53e+01  1.51e+00  1.68e+02    2.08e+01      0              \n  10  3.09e+01  8.25e+01  1.36e+00  1.24e+02    5.21e+01      0              \n  11  3.09e+01  4.95e+01  2.41e+00  1.24e+02    2.35e+01      0              \n  12  1.54e+01  5.60e+01  2.11e+00  8.86e+01    3.46e+01      0              \n  13  1.54e+01  3.37e+01  3.64e+00  8.99e+01    2.56e+01      0              \n  14  7.72e+00  3.88e+01  3.14e+00  6.31e+01    2.24e+01      0              \n  15  7.72e+00  2.43e+01  5.28e+00  6.51e+01    2.71e+01      0              \n  16  3.86e+00  2.80e+01  4.50e+00  4.54e+01    1.39e+01      0              \n  17  3.86e+00  1.87e+01  6.78e+00  4.49e+01    2.60e+01      0              \n  18  1.93e+00  2.01e+01  6.36e+00  3.24e+01    7.62e+00      0              \n  19  1.93e+00  1.52e+01  7.70e+00  3.01e+01    1.90e+01      0              \n  20  9.66e-01  1.52e+01  7.62e+00  2.25e+01    4.13e+00      0              \n  21  9.66e-01  1.30e+01  8.75e+00  2.14e+01    1.41e+01      0              \n  22  4.83e-01  1.29e+01  8.68e+00  1.71e+01    1.88e+00      0              \nReached starting chifact with l2-norm regularization: Start IRLS steps...\nirls_threshold 2.264552783208427\n  23  4.83e-01  1.20e+01  1.30e+01  1.83e+01    1.31e+01      0              \n  24  4.83e-01  1.25e+01  1.46e+01  1.96e+01    1.84e+01      0              \n  25  4.83e-01  1.26e+01  1.67e+01  2.07e+01    3.99e+00      0   Skip BFGS  \n  26  4.83e-01  1.29e+01  1.94e+01  2.23e+01    4.29e+00      0   Skip BFGS  \n  27  4.83e-01  1.33e+01  2.25e+01  2.42e+01    4.81e+00      0              \n  28  3.99e-01  1.39e+01  2.62e+01  2.43e+01    3.72e+00      0              \n  29  3.29e-01  1.39e+01  3.03e+01  2.38e+01    2.67e+00      1   Skip BFGS  \n  30  2.73e-01  1.38e+01  3.55e+01  2.35e+01    2.83e+00      1   Skip BFGS  \n  31  2.73e-01  1.37e+01  4.15e+01  2.51e+01    4.44e+00      1   Skip BFGS  \n  32  2.23e-01  1.41e+01  5.05e+01  2.54e+01    5.09e+00      0              \n  33  1.82e-01  1.42e+01  5.93e+01  2.50e+01    2.09e+00      0   Skip BFGS  \n  34  1.49e-01  1.41e+01  6.26e+01  2.34e+01    1.29e+00      0   Skip BFGS  \n  35  1.49e-01  1.37e+01  6.76e+01  2.37e+01    3.88e+00      0              \n  36  1.23e-01  1.38e+01  6.88e+01  2.23e+01    7.54e-01      0              \n  37  1.23e-01  1.35e+01  7.53e+01  2.27e+01    3.56e+00      0              \n  38  1.23e-01  1.36e+01  7.43e+01  2.27e+01    7.48e-01      0              \n  39  1.23e-01  1.36e+01  7.84e+01  2.32e+01    1.28e+00      0   Skip BFGS  \n  40  1.23e-01  1.37e+01  7.62e+01  2.31e+01    5.12e-01      0              \n  41  1.23e-01  1.37e+01  8.16e+01  2.37e+01    1.32e+00      0              \n  42  1.02e-01  1.38e+01  7.69e+01  2.16e+01    1.60e+00      0              \n  43  1.02e-01  1.34e+01  9.13e+01  2.27e+01    4.47e+00      0              \n  44  1.02e-01  1.36e+01  7.70e+01  2.14e+01    9.28e-01      0              \n  45  1.02e-01  1.34e+01  9.90e+01  2.34e+01    3.82e+00      0              \n  46  1.02e-01  1.37e+01  7.02e+01  2.09e+01    1.46e+00      0              \n  47  1.02e-01  1.33e+01  1.05e+02  2.40e+01    8.34e+00      0              \n  48  8.42e-02  1.38e+01  7.02e+01  1.97e+01    2.78e+00      0              \n  49  8.42e-02  1.32e+01  1.12e+02  2.26e+01    1.56e+01      0              \n  50  8.42e-02  1.35e+01  7.10e+01  1.95e+01    2.08e+00      0              \n  51  8.42e-02  1.31e+01  1.14e+02  2.27e+01    1.13e+01      0              \n  52  8.42e-02  1.35e+01  7.53e+01  1.99e+01    3.48e+00      0              \nReach maximum number of IRLS cycles: 30\n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 7.1256e+01\n0 : |xc-x_last| = 6.7113e+00 <= tolX*(1+|x0|) = 3.9461e+00\n0 : |proj(x-g)-x|    = 3.4840e+00 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 3.4840e+00 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =     100    <= iter          =     53\n------------------------- DONE! -------------------------\n"}],"key":"MYqCWsaNMh"}],"data":{"type":"notebook-code"},"key":"ecxDz5c28K"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Observed and Predicted Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aBrsMEc71J"}],"identifier":"plot-observed-and-predicted-data","label":"Plot Observed and Predicted Data","html_id":"plot-observed-and-predicted-data-1","implicit":true,"key":"Lf40gC4mAM"}],"data":{"type":"notebook-content"},"key":"IVBYrLwWTk"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot the true and apparent resistivities on a sounding curve\nfig = plt.figure(figsize=(11, 5))\nax1 = fig.add_axes([0.2, 0.1, 0.6, 0.8])\nax1.semilogy(AB_separations / 2, dobs, \"k\")\nax1.semilogy(AB_separations / 2, simulation_L2.dpred(recovered_model_L2), \"b\")\nax1.semilogy(AB_separations / 2, simulation_irls.dpred(recovered_model_irls), \"r\")\nax1.grid(which=\"both\")\nax1.set_xlabel(\"AB/2 (m)\")\nax1.set_ylabel(r\"Apparent Resistivity ($\\Omega m$)\")\nax1.legend([\"Observed\", \"L2 Inversion\", \"IRLS Inversion\"])\nplt.show()","key":"b4arb9l9jU"},{"type":"output","id":"edf0AaPxp5gHPtAWZ6MwM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"34b9be1eea83d0dc4f5e53eaa669fc61","path":"/user-tutorials/build/34b9be1eea83d0dc4f5e53eaa669fc61.png"},"text/plain":{"content":"<Figure size 1100x500 with 1 Axes>","content_type":"text/plain"}}}],"key":"QC7mazcdFL"}],"data":{"type":"notebook-code"},"key":"rDrIjewOLl"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Recovered Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N8lLclEAup"}],"identifier":"plot-recovered-models","label":"Plot Recovered Models","html_id":"plot-recovered-models","implicit":true,"key":"giFNmS661F"}],"data":{"type":"notebook-content"},"key":"oORxE2LcPS"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot true model and recovered model\nfig = plt.figure(figsize=(6, 6))\n\nax1 = fig.add_axes([0.2, 0.15, 0.7, 0.7])\nplot_1d_layer_model(true_layers, true_resistivities, ax=ax1, color=\"k\")\nplot_1d_layer_model(\n    layer_thicknesses, log_resistivity_map * recovered_model_L2, ax=ax1, color=\"b\"\n)\nplot_1d_layer_model(\n    layer_thicknesses, log_resistivity_map * recovered_model_irls, ax=ax1, color=\"r\"\n)\nx_min, x_max = true_resistivities.min(), true_resistivities.max()\nax1.set_xlim(0.9 * x_min, 1.1 * x_max)\nax1.grid()\nax1.set_xlabel(r\"Resistivity ($\\Omega m$)\")\nax1.legend([\"True Model\", \"L2 Model\", \"IRLS Model\"])\nplt.show()","key":"c1KvLCHRer"},{"type":"output","id":"KiSYlxgzFWvFJpztWwhsO","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e2fdc79945b526bc342bb283da0ba939","path":"/user-tutorials/build/e2fdc79945b526bc342bb283da0ba939.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"RCcw4u7kPy"}],"data":{"type":"notebook-code"},"key":"uVc6cYBSTx"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Parametric Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PbEKl5MPj8"}],"identifier":"parametric-inversion","label":"Parametric Inversion","html_id":"parametric-inversion","implicit":true,"key":"X9PHrs1Gzb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we assume the subsurface is defined by a 3-layered Earth. However, the electrical properties and thicknesses of the layers are unknown. Here, we define our model to include log-conductivities and log-thicknesses. When including quantities that span different scales, it is frequently best to define the model in terms of log-values so that each quantity influences the predicted data evenly.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FO4vVEOz6U"}],"key":"kgyxNT5S6l"}],"data":{"type":"notebook-content"},"key":"NWjOsBbwbq"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Models and Mappings","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"trXr2L18TV"}],"identifier":"models-and-mappings","label":"Models and Mappings","html_id":"models-and-mappings","implicit":true,"key":"nWcOKIgtGZ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For a 3-layered Earth model, the model consists of 2 log-thicknesses and 3 log-conductivities. Similar to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VZGZZPLGrT"},{"type":"link","url":"/fwd-dcr-1d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GYGiPx2O4w"}],"urlSource":"fwd_dcr_1d.ipynb","internal":true,"dataUrl":"/fwd-dcr-1d.json","protocol":"file","key":"rSJFGOEwqJ"},{"type":"text","value":" tutorial, need a mapping that extract log-thicknesses and log-conductivities from the model, and mappings that convert log-values to property values. For this, we require the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BWxBcu6oBA"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.Wires.html#simpeg.maps.wires","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.maps.Wires","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w8sxRHjgIq"}],"urlSource":"myst:SimPEG#SimPEG.maps.Wires","internal":false,"protocol":"myst","key":"BEoYGKgoPX"},{"type":"text","value":" mapping and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YAv5xl4Df7"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.ExpMap.html#simpeg.maps.expmap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.maps.ExpMap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jaZ4CZBOQG"}],"urlSource":"myst:SimPEG#SimPEG.maps.ExpMap","internal":false,"protocol":"myst","key":"NyF01BlkPF"},{"type":"text","value":" mapping classes. Note that successive mappings can be chained together using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y5l4Sywur7"},{"type":"inlineMath","value":"*","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>","key":"qE3ToYqycp"},{"type":"text","value":" operator.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ulWtJCCHw3"}],"key":"eJcktVLmt4"}],"data":{"type":"notebook-content"},"key":"TVyeUwpdtr"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Wire maps to extract log-thicknesses and log-conductivities\nwire_map = maps.Wires((\"log_thicknesses\", 2), (\"log_conductivity\", 3))\n\n# Maping for layer thicknesses\nlog_thicknesses_map = maps.ExpMap() * wire_map.log_thicknesses\n\n# Mapping for conductivities\nlog_conductivity_map = maps.ExpMap() * wire_map.log_conductivity","key":"yMeuBxdJGL"},{"type":"output","id":"W46iB8uY5V8vXDaKKCcJF","data":[],"key":"xThznc80HS"}],"data":{"type":"notebook-code"},"key":"R00u7ihk29"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Starting and Reference Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H4qqu9sWAX"}],"identifier":"starting-and-reference-models","label":"Starting and Reference Models","html_id":"starting-and-reference-models","implicit":true,"key":"bgiSdhUDbG"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This problem is highly non-linear so it is important to have a reasonable estimate of the true model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EBMvvhcuas"}],"key":"tG1veuIUOG"}],"data":{"type":"notebook-content"},"key":"lZTDY0chKj"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"starting_parametric_model = np.log(np.r_[125.0, 50.0, 1e-3, 2e-3, 5e-2])\n\nreference_parametric_model = starting_parametric_model.copy()","key":"oaxKqnMVgU"},{"type":"output","id":"_pNSdx9f9Z8sk9Ec-FYPv","data":[],"key":"giR1tHyTDV"}],"data":{"type":"notebook-code"},"key":"QevwrJNUya"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tHTAkqrm3p"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation-2","implicit":true,"key":"xVPLPW3CJl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Because the layer thicknesses are part of the model, we define the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZhmWj0AfTF"},{"type":"inlineCode","value":"thicknessesMap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PV8lCH5cMk"},{"type":"text","value":". Because we are working in terms of electrical conductivity, we must define the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ce2eNX2Pcb"},{"type":"inlineCode","value":"sigmaMap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"veKUFcQSRw"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"stfXIBtccA"}],"key":"ts2EBYAKJ5"}],"data":{"type":"notebook-content"},"key":"qC6JkK3wwt"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"simulation_parametric = dc.simulation_1d.Simulation1DLayers(\n    survey=survey,\n    sigmaMap=log_conductivity_map,\n    thicknessesMap=log_thicknesses_map,\n)","key":"q23NMAcwEn"},{"type":"output","id":"yBVIxYWS6iCaSH2gy-1Qk","data":[],"key":"L5WYCivC7e"}],"data":{"type":"notebook-code"},"key":"zEc2KiSkHZ"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l85MzdUyWT"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit-2","implicit":true,"key":"aUMGiIgfrt"}],"data":{"type":"notebook-content"},"key":"F6LP7hAfkc"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dmis_parametric = data_misfit.L2DataMisfit(\n    simulation=simulation_parametric, data=data_object\n)","key":"wRaU0u0SUb"},{"type":"output","id":"eDMQuRqg78mWp3Mju1Zh2","data":[],"key":"r2ff3g25lD"}],"data":{"type":"notebook-code"},"key":"YrO4VeKrD6"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define a (Combo) Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BwfER9MjF8"}],"identifier":"define-a-combo-regularization","label":"Define a (Combo) Regularization","html_id":"define-a-combo-regularization","implicit":true,"key":"jGOZgborju"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We need to define a regularization for each model parameter type. In this case, we have log-thicknesses and log-conductivities. For each model parameter type, we create a 1D ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XwczUXwpOU"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TensorMesh.html#discretize.tensormesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"tensor mesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EI2fTGOZH9"}],"urlSource":"myst:discretize#discretize.TensorMesh","internal":false,"protocol":"myst","key":"bLsNuQ7mgY"},{"type":"text","value":" with length equal to the number of parameters. In the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zAyHsL9LxW"},{"type":"inlineCode","value":"mapping","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PpsrczcUdR"},{"type":"text","value":" keyword argument, we used the wire map that extracts the specific model parameters from the model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KQdTTTOnfD"}],"key":"m1HtAw61HQ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SHVX19mDpe"},{"type":"inlineMath","value":"*","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>","key":"AO6b5W5MF1"},{"type":"text","value":" operator, separate regularizations can be summed to form a regularization that is also a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yU3DyVaKez"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.objective_function.ComboObjectiveFunction.html#simpeg.objective_function.comboobjectivefunction","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"ComboObjectiveFunction","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"u4jZQgHA6x"}],"urlSource":"myst:SimPEG#SimPEG.objective_function.ComboObjectiveFunction","internal":false,"protocol":"myst","key":"YIcoKERxji"},{"type":"text","value":". By setting the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Syfx2Q4Z3S"},{"type":"inlineCode","value":"multipliers","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SdtsoXKwWR"},{"type":"text","value":" property, we can emphasis the relative contributions of the log-thicknesses and log-conductivities regularizations.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QL64fSY2Bp"}],"key":"nUgzMJt8As"}],"data":{"type":"notebook-content"},"key":"vcpkBGidsQ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"reg_1 = regularization.Smallness(\n    TensorMesh([(np.ones(2))], \"0\"),\n    mapping=wire_map.log_thicknesses,\n    reference_model=reference_parametric_model,\n)\n\nreg_2 = regularization.Smallness(\n    TensorMesh([(np.ones(3))], \"0\"),\n    mapping=wire_map.log_conductivity,\n    reference_model=reference_parametric_model,\n)\n\nreg_parametric = reg_1 + reg_2\nreg_parametric.multipliers = [1.0, 0.1]","key":"gprl4687Lt"},{"type":"output","id":"C-EnWgIEkq_PbJHMo1JKv","data":[],"key":"QoFaLCkxwx"}],"data":{"type":"notebook-code"},"key":"g0FOcRiR5V"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p1oBXpgBx8"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm-2","implicit":true,"key":"k6X21oxqze"}],"data":{"type":"notebook-content"},"key":"MWcFtsD1V3"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"opt_parametric = optimization.InexactGaussNewton(\n    maxIter=100, maxIterLS=20, maxIterCG=20, tolCG=1e-3\n)","key":"VsKz0BGwhc"},{"type":"output","id":"wjIZl6M5doWpkbxfvHhdv","data":[],"key":"iZeCzjVC3u"}],"data":{"type":"notebook-code"},"key":"qxMH3o2wox"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n6qxRtiPK1"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem-2","implicit":true,"key":"OukIdf9Lkv"}],"data":{"type":"notebook-content"},"key":"KuwO1HBrCU"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_parametric = inverse_problem.BaseInvProblem(\n    dmis_parametric, reg_parametric, opt_parametric\n)","key":"vq2MuMOFDF"},{"type":"output","id":"5r7sx59Ngce8AJOp4aoxz","data":[],"key":"ZGjRr276ZW"}],"data":{"type":"notebook-code"},"key":"UhhVHZPULV"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i0zOjgtO3n"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives-2","implicit":true,"key":"SOAIhUSVmx"}],"data":{"type":"notebook-content"},"key":"P5oBikBpWC"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights = directives.UpdateSensitivityWeights(every_iteration=True)\nupdate_jacobi = directives.UpdatePreconditioner(update_every_iteration=True)\nstarting_beta = directives.BetaEstimate_ByEig(beta0_ratio=10)\nbeta_schedule = directives.BetaSchedule(coolingFactor=2.0, coolingRate=2)\ntarget_misfit = directives.TargetMisfit(chifact=1.0)\n\ndirectives_list_parametric = [\n    sensitivity_weights,\n    update_jacobi,\n    starting_beta,\n    beta_schedule,\n    target_misfit,\n]","key":"DNm57b9P85"},{"type":"output","id":"i_FfRtg0E9jg7m5-vD5IT","data":[],"key":"dHOqFFrwg3"}],"data":{"type":"notebook-code"},"key":"nxXsxlhJXH"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z2QkZylrXf"}],"identifier":"define-and-run-inversion","label":"Define and Run Inversion","html_id":"define-and-run-inversion","implicit":true,"key":"d6QelfVnhE"}],"data":{"type":"notebook-content"},"key":"NtHBYGniCL"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_parametric = inversion.BaseInversion(\n    inv_prob_parametric, directives_list_parametric\n)\nrecovered_model_parametric = inv_parametric.run(starting_parametric_model)","key":"hXQC4RCa1a"},{"type":"output","id":"1_WNQdD-ugJEa8nbuVJ9h","data":[{"name":"stdout","output_type":"stream","text":"\n                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation1DLayers problem***\n                        \nmodel has any nan: 0\n============================ Inexact Gauss Newton ============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  1.36e+05  9.75e+03  0.00e+00  9.75e+03    8.61e+03      0              \n   1  1.36e+05  6.74e+03  1.02e-02  8.13e+03    1.77e+03      0              \n   2  6.80e+04  6.18e+03  1.46e-02  7.17e+03    4.40e+03      0   Skip BFGS  \n   3  6.80e+04  3.57e+03  5.00e-02  6.97e+03    6.25e+02      0              \n   4  3.40e+04  3.42e+03  5.20e-02  5.19e+03    3.64e+03      0   Skip BFGS  \n   5  3.40e+04  1.28e+03  1.14e-01  5.14e+03    6.57e+02      0              \n   6  1.70e+04  1.37e+03  1.09e-01  3.22e+03    2.48e+03      0              \n   7  1.70e+04  4.43e+02  1.61e-01  3.18e+03    4.81e+02      0              \n   8  8.51e+03  4.91e+02  1.63e-01  1.88e+03    1.47e+03      0              \n   9  8.51e+03  1.70e+02  2.03e-01  1.89e+03    2.66e+02      0              \n  10  4.25e+03  1.78e+02  2.15e-01  1.09e+03    8.54e+02      0              \n  11  4.25e+03  6.86e+01  2.49e-01  1.13e+03    1.32e+02      0              \n  12  2.13e+03  6.89e+01  2.59e-01  6.19e+02    4.98e+02      0              \n  13  2.13e+03  3.13e+01  2.88e-01  6.43e+02    6.70e+01      0              \n  14  1.06e+03  3.17e+01  2.91e-01  3.41e+02    2.82e+02      0              \n  15  1.06e+03  1.84e+01  3.14e-01  3.53e+02    3.37e+01      0              \n  16  5.32e+02  1.86e+01  3.15e-01  1.86e+02    1.54e+02      0              \n  17  5.32e+02  1.39e+01  3.32e-01  1.91e+02    1.34e+01      0              \n  18  2.66e+02  1.40e+01  3.32e-01  1.02e+02    8.12e+01      0              \n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 9.7491e+02\n1 : |xc-x_last| = 4.6751e-02 <= tolX*(1+|x0|) = 1.2573e+00\n0 : |proj(x-g)-x|    = 8.1208e+01 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 8.1208e+01 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =     100    <= iter          =     19\n------------------------- DONE! -------------------------\n"}],"key":"XKQMCYvpR0"}],"data":{"type":"notebook-code"},"key":"OUsC6yMsM2"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Observed and Predicted Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FJ9ssmwD2u"}],"identifier":"plot-observed-and-predicted-data","label":"Plot Observed and Predicted Data","html_id":"plot-observed-and-predicted-data-2","implicit":true,"key":"UNv6C8t5xf"}],"data":{"type":"notebook-content"},"key":"RZ8t7JzFG2"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot the true and apparent resistivities on a sounding curve\nfig = plt.figure(figsize=(11, 5))\nax1 = fig.add_axes([0.2, 0.1, 0.6, 0.8])\nax1.semilogy(AB_separations / 2, dobs, \"k\")\nax1.semilogy(AB_separations / 2, simulation_L2.dpred(recovered_model_L2), \"b\")\nax1.semilogy(AB_separations / 2, simulation_irls.dpred(recovered_model_irls), \"r\")\nax1.semilogy(\n    AB_separations / 2, simulation_parametric.dpred(recovered_model_parametric), \"g\"\n)\nax1.grid(which=\"both\")\nax1.set_xlabel(\"AB/2 (m)\")\nax1.set_ylabel(r\"Apparent Resistivity ($\\Omega m$)\")\nax1.legend([\"Observed\", \"L2 Inversion\", \"IRLS Inversion\", \"Parametric Inversion\"])\nplt.show()","key":"OOsmiTlLkl"},{"type":"output","id":"FfS1zeHvdtDq7mWtaZOfh","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1d88c35336555c425d341fd617db1860","path":"/user-tutorials/build/1d88c35336555c425d341fd617db1860.png"},"text/plain":{"content":"<Figure size 1100x500 with 1 Axes>","content_type":"text/plain"}}}],"key":"xJCQgvoGT5"}],"data":{"type":"notebook-code"},"key":"Gwy82KMeiQ"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Recovered Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iGBgF9CpFc"}],"identifier":"plot-recovered-models","label":"Plot Recovered Models","html_id":"plot-recovered-models-1","implicit":true,"key":"olwGIgx1av"}],"data":{"type":"notebook-content"},"key":"ajeSCXm0r8"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(6, 6))\n\nax1 = fig.add_axes([0.2, 0.15, 0.7, 0.7])\nplot_1d_layer_model(true_layers, true_resistivities, ax=ax1, color=\"k\")\nplot_1d_layer_model(\n    layer_thicknesses, log_resistivity_map * recovered_model_L2, ax=ax1, color=\"b\"\n)\nplot_1d_layer_model(\n    layer_thicknesses, log_resistivity_map * recovered_model_irls, ax=ax1, color=\"r\"\n)\nplot_1d_layer_model(\n    log_thicknesses_map * recovered_model_parametric,\n    1 / (log_conductivity_map * recovered_model_parametric),\n    ax=ax1,\n    color=\"g\",\n)\nx_min, x_max = true_resistivities.min(), true_resistivities.max()\nax1.set_xlim(0.8 * x_min, 2 * x_max)\nax1.set_ylim([np.sum(layer_thicknesses), 0])\nax1.grid()\nax1.set_xlabel(r\"Resistivity ($\\Omega m$)\")\nax1.legend([\"True Model\", \"L2 Model\", \"IRLS Model\", \"Parametric Model\"])\nplt.show()","key":"cdgdDA3Ezg"},{"type":"output","id":"dTFjJLr7kYy99ItoOzHDQ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"41fbb03289e7370ade8ec18f46e1e15d","path":"/user-tutorials/build/41fbb03289e7370ade8ec18f46e1e15d.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"hSlxoio9jB"}],"data":{"type":"notebook-code"},"key":"O88XTkMGS0"}],"key":"orfnJQQCwi"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"3D Forward Simulation","url":"/fwd-dcr-3d","group":"SimPEG User Tutorials"},"next":{"title":"2.5D DC Resistivity Inversion","url":"/inv-dcr-2d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}