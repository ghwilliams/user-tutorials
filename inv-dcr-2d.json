{"kind":"Notebook","sha256":"8d1e86047efb77fb0e34344665b7b3b357faaa5ee018e64c27d085ed6698a1d1","slug":"inv-dcr-2d","location":"/notebooks/05-dcr/inv_dcr_2d.ipynb","dependencies":[],"frontmatter":{"title":"2.5D DC Resistivity Inversion","content_includes_title":false,"github":"https://github.com/simpeg/user-tutorials","keywords":[],"exports":[{"format":"ipynb","filename":"inv_dcr_2d.ipynb","url":"/user-tutorials/build/inv_dcr_2d-4154ebc0292c8fa19714d13df12f3191.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"admonition","class":"caution","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s4mlRfSolF"}],"key":"ha5QA0bcCh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Efqme5o3MC"}],"key":"VNmvPb1hCj"}],"key":"W15Rvoz7oQ"}],"data":{"type":"notebook-content"},"key":"D8ioAQUJDO"},{"type":"block","children":[{"type":"admonition","class":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Light-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U9gwfQWoqG"}],"key":"vbJBr6fHjT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial requires minimal computational resources and can be executed quickly in the background while other computer processes are running.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X4xOfgpR1p"}],"key":"zaCIy7Bl57"}],"key":"i8y9HfRgqw"}],"data":{"type":"notebook-content"},"key":"WBpyFmAgNh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U6ChvuZaV2"}],"key":"TFYeJ6hTTA"},{"type":"text","value":" Devin C. Cowan","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qPDYa3oey6"}],"key":"N3LqzuneFU"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ruIFlVjBV1"}],"key":"HXK7AzNVnE"},{"type":"text","value":" DC resistivity, 2.5D inversion, sparse norm, tree mesh.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PxrrvQJgRq"}],"key":"Ku1QJzI14V"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"QoB51qf1dC"}],"key":"eTi4bazYmp"},{"type":"text","value":" Here we invert DC resistivity data on a tree mesh to recover the subsurface distribution of electric properties. To demonstrate a range of functionality within SimPEG, we apply two approaches:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Ld8iEasrAc"}],"key":"jr5abvFs0r"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Weighted least-squares inversion, where we invert normalized voltage data to recover a log-conductivity model","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"L3S7sHuT8J"}],"key":"g0js0saYCV"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Iteratively re-weighted least-squares (IRLS) inversion, where we invert apparent resistivity data to recover a log-resistivity model","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"dqoiVXB9MJ"}],"key":"gaWWyvViIq"}],"key":"gUAPS8TvQK"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"B4CccazYJx"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"weighted least-squares","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"pXmFTZRcrB"}],"key":"t4A3oUTkuq"},{"type":"text","value":" approach is a great introduction to geophysical inversion with SimPEG. One drawback however, is that it recovers smooth structures which may not be representative of the true model. The ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"D80se0Eetv"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"iteratively re-weighted least-squares","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"rSkr7nOqfG"}],"key":"Rid7r4Tpi8"},{"type":"text","value":" approach is able to recover sparse and/or blocky structures. Because this tutorial focusses primarily on\ninversion-related functionality, we urge the reader to become familiar with functionality explained in the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NFfhksFXeV"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"odca08vJw7"}],"urlSource":"fwd_dcr_2d.ipynb","internal":true,"dataUrl":"/fwd-dcr-2d.json","protocol":"file","key":"pBkcnuh8eC"},{"type":"text","value":" tutorial before working through this one.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"uPRsYy0tfX"}],"key":"uCVCXxWYxj"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Learning Objectives:","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"eeDrU3n8xh"}],"key":"uw29DBCZDB"}],"key":"GhyhUJmeUx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Introduce geophysical inversion with SimPEG.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"nyCuT5ycQf"}],"key":"VyOeZ2Vs8q"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Assigning appropriate uncertainties to normalized voltage and apparent resistivity data.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"f3n35f5G1n"}],"key":"KFJxLtyFOu"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Designing a suitable mesh for 2.5D DC resistivity inversion.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"pdt9EGuX46"}],"key":"wDauQARF79"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Choosing suitable parameters for the inversion.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"wi8n98VOMH"}],"key":"aq0MpP0I16"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Specifying directives that are applied throughout the inversion.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"ytKRf5lm0G"}],"key":"FKw2SKXZx2"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Apply the sensitivity weighting commonly used when inverting magnetic data.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"pQHVs7V7RT"}],"key":"x3qVkpiW63"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Inversion with weighted least-squares and sparse-norm regularizations.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"D8IHrktrlu"}],"key":"qZCVXCpNeG"},{"type":"listItem","spread":true,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Analyzing inversion outputs.","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"UJwclNY3Uc"}],"key":"eOWllPiGrn"}],"key":"J8lYaFeUyv"}],"data":{"type":"notebook-content"},"key":"FGfowqn4Ru"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NKRwpUuSlH"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"xpWRGYEi0d"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise.\nAll of the functionality specific to DC resistivity is imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eAuQHFFHdJ"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/SimPEG.electromagnetics.static.resistivity.html#module-simpeg.electromagnetics.static.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG​.electromagnetics​.static​.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UsboZnqpzA"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity","internal":false,"protocol":"myst","key":"WwxAvK5dyx"},{"type":"text","value":".\nWe also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XEm4f5IMV4"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/SimPEG.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TRPgsaroJO"}],"urlSource":"myst:SimPEG#SimPEG.utils","internal":false,"protocol":"myst","key":"iulaudSzaD"},{"type":"text","value":". Classes required to define the data misfit, regularization, optimization, etc... are imported from elsewhere within SimPEG. We also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mZTtuqkYw8"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/SimPEG.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NWHxwPm7Cg"}],"urlSource":"myst:SimPEG#SimPEG.utils","internal":false,"protocol":"myst","key":"jRVxU4ErCb"},{"type":"text","value":". To generate the mesh used for the inversion, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dE56NFnddR"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MdFVXI3ihk"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"kDYCDszY6A"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CMBDQHbXui"}],"key":"mNkHNVGsgV"}],"data":{"type":"notebook-content"},"key":"xcyAflEdcg"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom SimPEG.electromagnetics.static import resistivity as dc\nfrom SimPEG.electromagnetics.static.utils.static_utils import (\n    plot_pseudosection,\n    generate_survey_from_abmn_locations,\n    apparent_resistivity_from_voltage,\n    geometric_factor,\n)\nfrom SimPEG.utils.io_utils.io_utils_electromagnetics import read_dcip2d_ubc\nfrom SimPEG.utils import download, model_builder\nfrom SimPEG import (\n    maps,\n    data,\n    data_misfit,\n    regularization,\n    optimization,\n    inverse_problem,\n    inversion,\n    directives,\n)\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import mkvc, active_from_xyz\n\n# Basic Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom scipy.interpolate import LinearNDInterpolator\nimport tarfile\n\nmpl.rcParams.update({\"font.size\": 14})  # default font size\ncmap = mpl.cm.RdYlBu_r  # default colormap","key":"LxUD6caIel"},{"type":"output","id":"7ole5zKYETiJnIK81eFTD","data":[],"key":"UPyJpEYaKw"}],"data":{"type":"notebook-code"},"key":"OkX53zJq6S"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load Tutorial Data and Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d0HNM5E82i"}],"identifier":"load-tutorial-data-and-plot","label":"Load Tutorial Data and Plot","html_id":"load-tutorial-data-and-plot","implicit":true,"key":"seLqbHkwtW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For most geophysical inversion projects, a reasonable inversion result can be obtained so long as the practitioner has observed data, the survey geometry and topography. For this tutorial, the observed data and topography files are provided. Here, we download and import the observed data and topography into the SimPEG framework.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rCm9WgD2Q7"}],"key":"BSovRnPvlL"}],"data":{"type":"notebook-content"},"key":"hHvSR9PNhd"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# URL to download from repository assets\ndata_source = \"https://github.com/simpeg/user-tutorials/raw/main/assets/05-dcr/inv_dcr_2d_files.tar.gz\"\n\n# download the data\ndownloaded_data = download(data_source, overwrite=True)\n\n# unzip the tarfile\ntar = tarfile.open(downloaded_data, \"r\")\ntar.extractall()\ntar.close()\n\n# path to the directory containing our data\ndir_path = downloaded_data.split(\".\")[0] + os.path.sep\n\n# files to work with\ntopo_filename = dir_path + \"topo_2d.txt\"\ndata_filename = dir_path + \"dc_data.obs\"","key":"jLI98vMuIx"},{"type":"output","id":"O8jhvD2Wh2KFv2xKqtgx2","data":[{"name":"stdout","output_type":"stream","text":"overwriting D:\\Documents\\Repositories\\user-tutorials\\notebooks\\05-dcr\\inv_dcr_2d_files.tar.gz\nDownloading https://github.com/simpeg/user-tutorials/raw/main/assets/05-dcr/inv_dcr_2d_files.tar.gz\n   saved to: D:\\Documents\\Repositories\\user-tutorials\\notebooks\\05-dcr\\inv_dcr_2d_files.tar.gz\nDownload completed!\n"}],"key":"akeZVFCBvr"}],"data":{"type":"notebook-code"},"key":"MjhIbllmOm"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A8C0QO06Qq"}],"identifier":"load-the-topography","label":"Load the Topography","html_id":"load-the-topography","implicit":true,"key":"UPz9RkdGtb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"True surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zqEQuIIi1L"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"G9ee3PvP1k"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"myst","key":"w00AjWpnvg"},{"type":"text","value":".\nFor the 2.5D problem geometry however, topography is an (N, 2) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c9AHebk98w"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"b74RkzSlMz"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"myst","key":"HgRvwtAxMF"},{"type":"text","value":", where the first coordinate represent along-line position and the second coordinate represents the vertical position. In this tutorial, we assume the topography and electrode locations are defined according to the 2.5D geometry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uemCql905x"}],"key":"A4dno2eX31"}],"data":{"type":"notebook-content"},"key":"JMSCvAYk2e"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Load 2D topography\ntopo_2d = np.loadtxt(str(topo_filename))","key":"GWWmaV83nG"},{"type":"output","id":"8EaahFc5H-0MfDnfPl5lc","data":[],"key":"NXEz7Swyvr"}],"data":{"type":"notebook-code"},"key":"z8Yj9qqFL1"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot 2D topography\nfig = plt.figure(figsize=(10, 2))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\nax.plot(topo_2d[:, 0], topo_2d[:, -1], color=\"b\", linewidth=1)\nax.set_xlim([topo_2d[:, 0].min(), topo_2d[:, 0].max()])\nax.set_xlabel(\"x (m)\", labelpad=5)\nax.set_ylabel(\"z (m)\", labelpad=5)\nax.grid(True)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=10)\nplt.show(fig)","key":"c57rAghbDN"},{"type":"output","id":"Qe028IJseSubP9FJGKPZA","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b9e414467659b701474244742d6e7908","path":"/user-tutorials/build/b9e414467659b701474244742d6e7908.png"},"text/plain":{"content":"<Figure size 1000x200 with 1 Axes>","content_type":"text/plain"}}}],"key":"F0gembXb3D"}],"data":{"type":"notebook-code","scrolled":false},"key":"O6bRwQLnp9"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load DC Resistivity Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CwoJ718utF"}],"identifier":"load-dc-resistivity-data","label":"Load DC Resistivity Data","html_id":"load-dc-resistivity-data","implicit":true,"key":"iYVBcVfwJ1"}],"data":{"type":"notebook-content"},"key":"fb22iEMxL2"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option A: DCIP2D formatted data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bVzO0yaPgW"}],"key":"W6jiQXVTNN"}],"key":"F7zZfj6vOs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For this tutorial, the observed data are organized with a UBC-GIF DCIP2D formatted data file. We can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QlNIxp1TeJ"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.utils.io_utils.read_dcip2d_ubc.html#simpeg.utils.io_utils.read_dcip2d_ubc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"read_dcip2d_ubc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZGOBvHdmZo"}],"urlSource":"myst:SimPEG#SimPEG.utils.io_utils.read_dcip2d_ubc","internal":false,"protocol":"myst","key":"LOOdsitvHd"},{"type":"text","value":" utility function to load data in this format. This function outputs a SimPEG ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AooJhpFEA2"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.data.Data.html#simpeg.data.data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kZPYHtXBx0"}],"urlSource":"myst:SimPEG#SimPEG.data.Data","internal":false,"protocol":"myst","key":"wbrpW1X0rT"},{"type":"text","value":" object. The data are normalized voltages in units V/A.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tz9Y2tEEeG"}],"key":"DBwjPEJNNh"}],"data":{"type":"notebook-content"},"key":"jwWPQ0gafH"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"voltage_data = read_dcip2d_ubc(data_filename, \"volt\", \"general\")","key":"RlPHj95qn1"},{"type":"output","id":"jsahElDrvzEDOSpnVXExc","data":[],"key":"nyMxpexILk"}],"data":{"type":"notebook-code"},"key":"A54K9DM8yT"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option B: Survey from ABMN electrode locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uxeFhL4eCB"}],"key":"EODBQasemN"}],"key":"msKuAYe6eb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If you have CSV-formatted data containing the ABMN electrode locations, you will need to:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q27frr0TEG"}],"key":"NnmZnMKjTf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"load the file into a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SkYJUaDcGm"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OAx6Ma8Gf4"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"myst","key":"rEtODWN6uc"}],"key":"EbGyFDModL"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"extract the data column and the A, B, M and N electrode locations","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zkzq1bpmug"}],"key":"hTg7hQI1ys"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"transform the electrode locations to the 2.5D geometry if necessary; i.e. (N, 2) ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Uhb6IilSCt"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"QSRxoZYNCH"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"myst","key":"wDBrCvZRVJ"}],"key":"fhpIJvsRJu"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"use the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"SEjE1Z1dOY"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.utils.generate_survey_from_abmn_locations.html#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"generate​_survey​_from​_abmn​_locations","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lsi3wIjvnQ"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.utils.generate_survey_from_abmn_locations","internal":false,"protocol":"myst","key":"fBCemC7Gic"},{"type":"text","value":" to generate a ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FENgyz532S"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.resistivity.Survey.html#simpeg.electromagnetics.static.resistivity.survey","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"survey","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OexbQ4RG1j"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity.Survey","internal":false,"protocol":"myst","key":"qa2mLc88Ac"},{"type":"text","value":" object automatically.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"VemDq3C9Oh"}],"key":"BLj7jYeNK4"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Define a ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"EvPnRyX12p"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.data.Data.html#simpeg.data.data","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kmamuIIzLh"}],"urlSource":"myst:SimPEG#SimPEG.data.Data","internal":false,"protocol":"myst","key":"dEgfQ1nsoo"},{"type":"text","value":" object attached to the survey and observed data.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"sDghiLMwSq"}],"key":"T7h1jNekfd"}],"key":"FZrJn9VN84"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"E.g. for a file containing electrode locations already formatted for a 2.5D geometry:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"JkrWQaatWZ"}],"key":"GayIhBvaq7"},{"type":"code","lang":"","value":"data_array = np.loadtxt(data_filename, skiprows=1)\n\ndobs = data_array[:, -1]\nA = data_array[:, 0:2]\nB = data_array[:, 2:4]\nM = data_array[:, 4:6]\nN = data_array[:, 6:8]\n\nsurvey = generate_survey_from_abmn_locations(\n    locations_a=A,\n    locations_b=B,\n    locations_m=M,\n    locations_n=M,\n    data_type='volt'\n)\n\ndc_data = data.Data(survey, dobs=dobs)","position":{"start":{"line":12,"column":1},"end":{"line":30,"column":1}},"key":"a8NSDgVEQH"}],"data":{"type":"notebook-content"},"key":"WlS0wjzAJI"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot DC Resistivity Data in Pseudo-Section","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LLATqyRCBK"}],"identifier":"plot-dc-resistivity-data-in-pseudo-section","label":"Plot DC Resistivity Data in Pseudo-Section","html_id":"plot-dc-resistivity-data-in-pseudo-section","implicit":true,"key":"VXaGPfHE6o"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BL36xzgOWj"},{"type":"link","url":"SimPEG#SimPEG.electromagnetics.static.utils.plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SnjOovcOyT"}],"urlSource":"SimPEG#SimPEG.electromagnetics.static.utils.plot_pseudosection","key":"sB9vrQvSp3"},{"type":"text","value":" utility function to plot the normalized voltage data in pseudosection. We also use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YVPpJ7ynDz"},{"type":"link","url":"SimPEG#SimPEG.electromagnetics.static.utils.apparent_resistivity_from_voltage","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"apparent​_resistivity​_from​_voltage","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NocVbwagIh"}],"urlSource":"SimPEG#SimPEG.electromagnetics.static.utils.apparent_resistivity_from_voltage","key":"wrSNci5avn"},{"type":"text","value":" utility function to convert the data to apparent resistivities, which are also plotted in pseudosection.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RdkDVrGbU4"}],"key":"GcY2yhA4kt"}],"data":{"type":"notebook-content"},"key":"vRRnEm7AOX"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot voltages pseudo-section\nfig = plt.figure(figsize=(8, 2.75))\nax1 = fig.add_axes([0.1, 0.15, 0.75, 0.78])\nplot_pseudosection(\n    voltage_data,\n    plot_type=\"scatter\",\n    ax=ax1,\n    scale=\"log\",\n    cbar_label=\"V/A\",\n    scatter_opts={\"cmap\": mpl.cm.viridis},\n)\nax1.set_title(\"Normalized Voltages\")\nplt.show()\n\n# Get apparent conductivities from volts and survey geometry\napparent_resistivities = apparent_resistivity_from_voltage(\n    voltage_data.survey, voltage_data.dobs\n)\n\n# Plot apparent resistivity pseudo-section\nfig = plt.figure(figsize=(8, 2.75))\nax1 = fig.add_axes([0.1, 0.15, 0.75, 0.78])\nplot_pseudosection(\n    voltage_data.survey,\n    apparent_resistivities,\n    plot_type=\"contourf\",\n    ax=ax1,\n    scale=\"log\",\n    cbar_label=\"$\\Omega m$\",\n    mask_topography=True,\n    contourf_opts={\"levels\": 20, \"cmap\": mpl.cm.RdYlBu},\n)\nax1.set_title(\"Apparent Resistivity\")\nplt.show()","key":"jouJN1JXsi"},{"type":"output","id":"j8E9W6acMOAshffVyaBtW","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fad5deeccd081162630bd8d16e7496b3","path":"/user-tutorials/build/fad5deeccd081162630bd8d16e7496b3.png"},"text/plain":{"content":"<Figure size 800x275 with 2 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3ee23d25f13a507699f8e3ece6f6ba31","path":"/user-tutorials/build/3ee23d25f13a507699f8e3ece6f6ba31.png"},"text/plain":{"content":"<Figure size 800x275 with 2 Axes>","content_type":"text/plain"}}}],"key":"BL5vAgbPke"}],"data":{"type":"notebook-code"},"key":"IQOWkmiwhz"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Assign Uncertainties","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LKnCynI0py"}],"identifier":"assign-uncertainties","label":"Assign Uncertainties","html_id":"assign-uncertainties","implicit":true,"key":"jF6iGP7x3R"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Inversion with SimPEG requires that we define the uncertainties on our data; that is, an estimate of the standard deviation of the noise on our data assuming it is uncorrelated Gaussian with zero mean. An online resource explaining uncertainties and their role in the inversion can be found ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kzGasdELRn"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qu2fTSkLlR"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"MC5Z5tSopU"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wGDOuJB3HG"}],"key":"nuGVHvhKtO"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For normalized voltage data,","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"a9R8iT9Sq1"}],"key":"VG6bExiMUa"},{"type":"text","value":" we generally apply a percent uncertainty and a very small floor uncertainty to all data. Differences in electrode spacing and subsurface conductivity result in measured voltages that span many orders of magnitude. A percent uncertainty ensures all data are fit equally. Depending on the quality of the data, we may choose a percent uncertainty between 2% - 10%. The floor uncertainty ensures stability when there are zero-crossings or erroneously small voltages. Here, we apply uncertainties of 1e-7 V/A + 5 %.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"b94acnLGMh"}],"key":"dvW0ZqdzL9"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For apparent resistivity data,","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hoZ4R00VYA"}],"key":"UqyuDJSCXi"},{"type":"text","value":" we also apply a percent uncertainty and a very small floor uncertainty to all data. A percent uncertainty will fit conductive and resistive structures equally; unlike a floor uncertainty which will prioritize fitting more resistive structures. Depending on the quality of the data, we may choose a percent uncertainty between 2% - 10%. The floor uncertainty ensures stability when there are zero-crossings or erroneously small voltages.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jlol9FXMUt"}],"key":"WdUCiJUByl"}],"data":{"type":"notebook-content"},"key":"iluytRLmoM"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Apply uncertainties to normalized voltage data\nvoltage_data.standard_deviation = 1e-7 + 0.05 * np.abs(voltage_data.dobs)","key":"ZCEJHxTsRY"},{"type":"output","id":"bH5qizNop54JSQVPhEEAU","data":[],"key":"HR3D6RsckV"}],"data":{"type":"notebook-code"},"key":"OQwl9KHcbD"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TqYRXOkcpl"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"l8I0YIjnIz"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The same rules for defining appropriate meshes for forward simulation of DC resistivity apply to inversion. Please visit the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X8qjoYf5DT"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gCSNHfuhZP"}],"urlSource":"fwd_dcr_2d.ipynb","internal":true,"dataUrl":"/fwd-dcr-2d.json","protocol":"file","key":"K8Rqc459YT"},{"type":"text","value":" tutorial to see the best practices for mesh design.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V7LjDUA79r"}],"key":"Rqp2KfMwk7"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Tutorial mesh:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mEbsZAhKrU"}],"key":"QJUccwfBdD"},{"type":"text","value":" Here, a minimum cell width of 4 m (or 1/10 the minimum electrode spacing) is used within our survey region. The largest electrode spacing was 400 m, so a the padding was extended at least 1200 m from the survey region. Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Hlg62lKpRG"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_surface.html#discretize.treemesh.refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oKcxBF0bh2"}],"urlSource":"myst:discretize#discretize.TreeMesh.refine_surface","internal":false,"protocol":"myst","key":"ydiyErsaKR"},{"type":"text","value":" method, we refine the tree mesh where there is significant topography. And using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EwK9VLjmko"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_points.html#discretize.treemesh.refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WczZZ1UEFc"}],"urlSource":"myst:discretize#discretize.TreeMesh.refine_points","internal":false,"protocol":"myst","key":"i5ieSX9QWY"},{"type":"text","value":" methods, we refine based on electrodes locations. Visit the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Czh1y7X0Pj"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.html#discretize.treemesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"tree mesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OGMNcIGjY8"}],"urlSource":"myst:discretize#discretize.TreeMesh","internal":false,"protocol":"myst","key":"Bd5tgJ6197"},{"type":"text","value":" API to see additional refinement methods.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HEVwPBDj37"}],"key":"belUVirePh"}],"data":{"type":"notebook-content"},"key":"ZztKFQ7LU9"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dh = 4  # base cell width\ndom_width_x = 3200.0  # domain width x\ndom_width_z = 2400.0  # domain width z\nnbcx = 2 ** int(np.round(np.log(dom_width_x / dh) / np.log(2.0)))  # num. base cells x\nnbcz = 2 ** int(np.round(np.log(dom_width_z / dh) / np.log(2.0)))  # num. base cells z\n\n# Define the base mesh with top at z = 0 m\nhx = [(dh, nbcx)]\nhz = [(dh, nbcz)]\nmesh = TreeMesh([hx, hz], x0=\"CN\")\n\n# Shift top to maximum topography\nmesh.origin = mesh.origin + np.r_[0.0, topo_2d[:, -1].max()]\n\n# Mesh refinement based on topography\nmesh.refine_surface(\n    topo_2d,\n    padding_cells_by_level=[0, 0, 4, 4],\n    finalize=False,\n)\n\n# Extract unique electrode locations.\nunique_locations = voltage_data.survey.unique_electrode_locations\n\n# Mesh refinement near electrodes.\nmesh.refine_points(\n    unique_locations, padding_cells_by_level=[8, 12, 6, 6], finalize=False\n)\n\nmesh.finalize()","key":"eQD14Yqt5A"},{"type":"output","id":"LP4U6JnZTiDHQcqMQRO89","data":[],"key":"bnaQMAKER9"}],"data":{"type":"notebook-code"},"key":"Tcwv2d6yDd"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wYuZ1m35H8"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"ekD1u8NQmR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulated geophysical data are dependent on the subsurface distribution of physical property values. As a result, the cells lying below the surface topography are commonly referred to as ‘active cells’. And air cells, whose physical property values are fixed, are commonly referred to as ‘inactive cells’. Here, the discretize ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fi8B8NrniS"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WMaw0nnPji"}],"urlSource":"myst:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"myst","key":"MLzLyVl3JJ"},{"type":"text","value":" utility function is used to find the indices of the active cells using the mesh and surface topography. The output quantity is a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r9xAeWH5Qs"},{"type":"inlineCode","value":"bool","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sxTcgcTk3m"},{"type":"text","value":" array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VZzcxkylCy"}],"key":"Bt338xjp9A"}],"data":{"type":"notebook-content"},"key":"xF8QnzMOVP"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_2d)\n\n# number of active cells\nn_active = np.sum(active_cells)","key":"XWtHXIiJ9v"},{"type":"output","id":"YyzRKcMttz9px3cGKFd-P","data":[],"key":"eJtJodqpy4"}],"data":{"type":"notebook-code"},"key":"UHHfnufR4O"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Project Electrodes to Discretized Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pHGzhtITmo"}],"identifier":"project-electrodes-to-discretized-topography","label":"Project Electrodes to Discretized Topography","html_id":"project-electrodes-to-discretized-topography","implicit":true,"key":"zf0FFrH5uL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Surface DC resistivity data will not be modeled accurately if the electrodes are modeled as living above or below the surface. It is especially problematic when electrodes are modeled as living in the air. Prior to inverting DC resistivity data, we must project the electrodes from their true elevation to the surface of the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qkbp6JvE14"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretized","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dPUJrevrGS"}],"key":"CwYHuphqBO"},{"type":"text","value":" topography. This is done using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sYosETi7Rh"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography.html#simpeg.electromagnetics.static.resistivity.survey.drape_electrodes_on_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"drape​_electrodes​_on​_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vpXVDlenbZ"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography","internal":false,"protocol":"myst","key":"c0tjbTlaUf"},{"type":"text","value":" method.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nmv6lraJo9"}],"key":"m84kABxyer"}],"data":{"type":"notebook-content"},"key":"tOo5D7v4UB"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"voltage_data.survey.drape_electrodes_on_topography(mesh, active_cells, option=\"top\")","key":"rnccQ5r5iO"},{"type":"output","id":"HaAdUBdLaJD6eXCc2L4lh","data":[],"key":"V004lRchKZ"}],"data":{"type":"notebook-code"},"key":"pSsAwNQ4xa"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OrgDOg345Z"}],"identifier":"weighted-least-squares-inversion","label":"Weighted Least-Squares Inversion","html_id":"weighted-least-squares-inversion","implicit":true,"key":"MtGdf7OLJp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, a weighted least-squares inversion approach is used to invert normalized voltage data to recover a log-conductivity model. We invert for log-conductivity because","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WMUTlUBfpE"}],"key":"xkljTK7ulR"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"It naturally enforces positive conductivity values in the recovered model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"iM7Q3miwbk"}],"key":"epxdAH16Pv"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Electrical conductivity is a physical property that spans many orders of magnitude","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xKmJDACVTO"}],"key":"SXN56sEkIn"}],"key":"KDjd63YCIg"}],"data":{"type":"notebook-content"},"key":"I03oWjTf7Z"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mapping from the Model to the Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gbZsAQG4ku"}],"identifier":"mapping-from-the-model-to-the-mesh","label":"Mapping from the Model to the Mesh","html_id":"mapping-from-the-model-to-the-mesh","implicit":true,"key":"eJ37nejdvW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In SimPEG, the term ‘model’ is not synonymous with the physical property values defined on the mesh. For whatever model we choose, we must define a mapping from the set of model parameters (a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"A1uF9aZUPj"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1D numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x0urUCAxWD"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"myst","key":"HSwxX1kbdX"},{"type":"text","value":") to the physical property values of all cells in the mesh. Mappings are created using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"D2uY4DUVms"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.IdentityMap.html#simpeg.maps.identitymap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.maps","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GcXc6z7c9Y"}],"urlSource":"myst:SimPEG#SimPEG.maps.IdentityMap","internal":false,"protocol":"myst","key":"rBlVmgDnyB"},{"type":"text","value":" module.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j8nByERRL0"}],"key":"nNljGmd6Fs"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For DC resistivity, the model parameters define the subsurface electrical conductivity, and the electrical conductivities of the cells in the air are given a fixed value. Here, the model defines the log-conductivity values for all active cells. We use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"slSJtm4RWO"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.ExpMap.html#simpeg.maps.expmap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG.maps.ExpMap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Q5KHJZUWJU"}],"urlSource":"myst:SimPEG#SimPEG.maps.ExpMap","internal":false,"protocol":"myst","key":"bCYE5bV9tB"},{"type":"text","value":" to map from the model parameters to the conductivity values for all active cells. Then we use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jdLF0dC1tX"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG​.maps​.InjectActiveCells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kz0ceptT15"}],"urlSource":"myst:SimPEG#SimPEG.maps.InjectActiveCells","internal":false,"protocol":"myst","key":"Q8HMoMd1rz"},{"type":"text","value":" map to project the active cell conductivities to the entire mesh. As explained in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Pr7gh0kp1a"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZFVGdgCfpQ"}],"urlSource":"fwd_dcr_2d.ipynb","internal":true,"dataUrl":"/fwd-dcr-2d.json","protocol":"file","key":"OOzvCrdB6S"},{"type":"text","value":" tutorial, air cells are given a fixed value of 1e-8 S/m to ensure the forward problem is well-conditionned. And the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"wpslaV7e4a"},{"type":"inlineMath","value":"*","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>","key":"hVtniHbbFi"},{"type":"text","value":" operator is used to combine the separate mapping objects into a single mapping.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gzNviQqgxu"}],"key":"HKylM6xfzm"}],"data":{"type":"notebook-content"},"key":"TSxsQZ7Csz"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Map model parameters to all cells\nlog_conductivity_map = maps.InjectActiveCells(mesh, active_cells, 1e-8) * maps.ExpMap(\n    nP=n_active\n)","key":"C6bSSNKl9M"},{"type":"output","id":"NHzATlpnrAdlhSwUEydQQ","data":[],"key":"bBCKqJMtBB"}],"data":{"type":"notebook-code"},"key":"Jd9wmFllgk"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Starting/Reference Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZrnUSakSi8"}],"identifier":"starting-reference-models","label":"Starting/Reference Models","html_id":"starting-reference-models","implicit":true,"key":"Tg4WjKxubq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fePKZn7ns8"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"starting model","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X2qzbSKqu3"}],"key":"CWQeLO00t5"},{"type":"text","value":" defines a reasonable starting point for the inversion and does not necessarily represent an initial estimate of the true model. It should be noted that the staring model ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x2EVveaDy1"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"cannot be vector of zeros,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mZ8ITCbWyw"}],"key":"q6AVh24evK"},{"type":"text","value":" otherwise the inversion will be unable to compute a gradient direction at the first iteration. For DC resistivity inversion, the starting model is frequently a halfspace estimated from the set of apparent resistivities/conductivities.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VjRBhLGkLW"}],"key":"GrhFxUrR1t"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AIPRBVzALR"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"reference model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AlfU8xMtGn"}],"key":"rBwH46GFLM"},{"type":"text","value":" is used to include a-priori information. By default, the starting model is set as the reference model. The impact of the reference model on the inversion will be discussed in another tutorial.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NZzx617dB4"}],"key":"oF2ZzI3wxR"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Notice that the length of the starting and reference models is equal to the number of model parameters!!!","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wKkmA2XElB"}],"key":"A1VJKZhqFQ"}],"data":{"type":"notebook-content"},"key":"CgWs5aEucn"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Median apparent resistivity\nmedian_resistivity = np.median(apparent_resistivities)\n\n# Create staring model from log-conductivity\nstarting_conductivity_model = np.log(1 / median_resistivity) * np.ones(n_active)\n\n# Zero reference conductivity model\nreference_conductivity_model = starting_conductivity_model.copy()","key":"dRCpYrXdJG"},{"type":"output","id":"sBTRqplXHEkMwmx8Y6kmm","data":[],"key":"O94yxxI5ax"}],"data":{"type":"notebook-code"},"key":"uvmPu30t4M"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Sv5BXWSfaV"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation","implicit":true,"key":"X5DjgQI6jF"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A simulation object defining the forward problem is required in order to predict data and calculate misfits for recovered models. A comprehensive description of the simulation object for 2.5D DC resistivity was discussed in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"k31Hx7fFSK"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VnOxjZQk7q"}],"urlSource":"fwd_dcr_2d.ipynb","internal":true,"dataUrl":"/fwd-dcr-2d.json","protocol":"file","key":"VLpHIaGk1K"},{"type":"text","value":" tutorial. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RoJRifs33J"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.resistivity.Simulation2DNodal.html#simpeg.electromagnetics.static.resistivity.simulation2dnodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation2DNodel","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OQaATZ377w"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.resistivity.Simulation2DNodal","internal":false,"protocol":"myst","key":"nTpoWglJ93"},{"type":"text","value":" simulation which solves for the electric potential on mesh nodes.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K738tyjc2k"}],"key":"rdzsVpBw7Z"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Since our model consists of log-conductivities, we use ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rxTryLQfw6"},{"type":"inlineCode","value":"sigmaMap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"h6utEl9Vx2"},{"type":"text","value":" to set the mapping from the model to the mesh cells. Except for in extreme cases, we can compute and store the Jacobian explicitly for 2.5D problems. By doing so, we drastically reduce the run-time of the inversion.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OKyt6IC0CX"}],"key":"vtthIpXANY"}],"data":{"type":"notebook-content"},"key":"wOIo8Zj52u"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"voltage_simulation = dc.simulation_2d.Simulation2DNodal(\n    mesh, survey=voltage_data.survey, sigmaMap=log_conductivity_map, storeJ=True\n)","key":"AZLe89eDUu"},{"type":"output","id":"azYO7koA-G0yrOcJGA-Id","data":[],"key":"XiH744CCen"}],"data":{"type":"notebook-code"},"key":"WIgA3coUBJ"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PgPChAGb5G"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit","implicit":true,"key":"MDKqY7yxkp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"To understand the role of the data misfit in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EDEVolg5Rl"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HxmLC91al1"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"yV2J3xJ504"},{"type":"text","value":".\nHere, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TlV0X1Si9I"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.data_misfit.L2DataMisfit.html#simpeg.data_misfit.l2datamisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"L2DataMisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oAUJVmzIsV"}],"urlSource":"myst:SimPEG#SimPEG.data_misfit.L2DataMisfit","internal":false,"protocol":"myst","key":"ufCCykReQv"},{"type":"text","value":" class to define the data misfit. In this case, the data misfit is the L2 norm of the weighted residual between the observed data and the data predicted for a given model. When instantiating the data misfit object within SimPEG, we must assign an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Tk0hOaUJTm"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yX9WljrLmV"}],"key":"Q1MJVk1Km0"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZIXALx3lSU"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simulation object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h2vIxYcDAN"}],"key":"po5JqZxBEE"},{"type":"text","value":" as properties.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HMYghlXS8y"}],"key":"Lr6jRAGuYJ"}],"data":{"type":"notebook-content"},"key":"wVXILO4D0z"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dmis_L2 = data_misfit.L2DataMisfit(simulation=voltage_simulation, data=voltage_data)","key":"YmE64PtST4"},{"type":"output","id":"qV6i3BBtmHiJdKdEG4TiQ","data":[],"key":"O9NYYf4hmj"}],"data":{"type":"notebook-code"},"key":"TZ6A2sIFxg"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T6HXoTHhF3"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization","implicit":true,"key":"E8cnUpXGlF"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To understand the role of the regularization in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fYX1thCjLt"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FKNNOxYYZR"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","key":"EsufI0pSdg"},{"type":"text","value":". Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fa03St8xQj"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.regularization.WeightedLeastSquares.html#simpeg.regularization.weightedleastsquares","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"WeightedLeastSquares","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ooi4XvOW3m"}],"urlSource":"myst:SimPEG#SimPEG.regularization.WeightedLeastSquares","internal":false,"protocol":"myst","key":"WH4EPUzHTl"},{"type":"text","value":" regularization class to constrain the inversion result. Here, the scaling constants that balance the smallness and smoothness terms are set directly. We use the inverse square of the smallest cell size to balance the smallness and smoothness terms. Setting ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gGuyUmAMPH"},{"type":"inlineCode","value":"alpha_s","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BOOeNcu2Eq"},{"type":"text","value":" to a very small value will recover the smoothest model. And the reference model is only applied to the smallness term.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"g7EiDhu3Sz"}],"key":"Tq8hRzfRoS"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"By default, the regularization acts on the model parameters; which in the case are the log-conductivities of the active cells. So we need to specify which cells are active in the regularization. And if we wanted to apply the regularization to a function of the model parameters, we would need to set an approprate mapping object using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fHucn4wtPW"},{"type":"inlineCode","value":"mapping","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WWNAdyQM7w"},{"type":"text","value":" keyword argument.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ctz6HKWHPW"}],"key":"MpWlQnhcGd"}],"data":{"type":"notebook-content"},"key":"Jc3v5I364E"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"reg_L2 = regularization.WeightedLeastSquares(\n    mesh,\n    active_cells=active_cells,\n    alpha_s=dh**-2,\n    alpha_x=1,\n    alpha_y=1,\n    reference_model=reference_conductivity_model,\n    reference_model_in_smooth=False,\n)","key":"WExaliVSRY"},{"type":"output","id":"8XZktFgDL9WGrizzabjJC","data":[],"key":"PgvojRhf8K"}],"data":{"type":"notebook-code"},"key":"GzMVuCa15I"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uTWIsjTK10"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm","implicit":true,"key":"IOneCExUbP"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To understand the role of the optimization algorithm in the inversion, please visit this online resource. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y6oGVahYcK"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.optimization.InexactGaussNewton.html#simpeg.optimization.inexactgaussnewton","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"InexactGaussNewton","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tN7EXMDaey"}],"urlSource":"myst:SimPEG#SimPEG.optimization.InexactGaussNewton","internal":false,"protocol":"myst","key":"QvYI9sETkj"},{"type":"text","value":" class to solve the optimization problem using the inexact Gauss Newton with conjugate gradient solver. Reasonable default values have generally been set for the properties of each optimization class. However, the user may choose to set custom values; e.g. the accuracy tolerance for the conjugate gradient solver or the number of line searches.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qIE3M7SYvp"}],"key":"udx1i7GuVM"}],"data":{"type":"notebook-content"},"key":"tZbxMCQ7y5"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"opt_L2 = optimization.InexactGaussNewton(\n    maxIter=40, maxIterLS=20, maxIterCG=20, tolCG=1e-3\n)","key":"J3AyVCZvqP"},{"type":"output","id":"cK60yDGRXy9AP5K7txFMK","data":[],"key":"BaCazEXkw1"}],"data":{"type":"notebook-code"},"key":"JO3DO4M6wd"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WE6ZoFee5b"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem","implicit":true,"key":"fCmmQ8avNH"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YcPZcMZOAP"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.inverse_problem.BaseInvProblem.html#simpeg.inverse_problem.baseinvproblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInvProblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rOJCcxpbGI"}],"urlSource":"myst:SimPEG#SimPEG.inverse_problem.BaseInvProblem","internal":false,"protocol":"myst","key":"dGG0i05wzf"},{"type":"text","value":" class to fully define the inverse problem that is solved at each beta (trade-off parameter) iteration. The inverse problem requires appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WJrLssgH9y"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data misfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nObdkVhINw"}],"key":"PnzOp4N7ZT"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"E9PX0Qjrfe"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"regularization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dH3vyDDrAy"}],"key":"UzU1PVviTr"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n6rvAUi44G"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"optimization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yOaq7w1je9"}],"key":"tJx5wdfuxh"},{"type":"text","value":" objects.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X1eH3T8voJ"}],"key":"skuZoLvCe5"}],"data":{"type":"notebook-content"},"key":"t22lXVEo6a"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_L2 = inverse_problem.BaseInvProblem(dmis_L2, reg_L2, opt_L2)","key":"HDMUs2nPGt"},{"type":"output","id":"LOT-9G3oUXImO87j0VcZf","data":[],"key":"KGC6Pn7Mjd"}],"data":{"type":"notebook-code"},"key":"fIlHQePCUE"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PnRJqjSfrd"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives","implicit":true,"key":"Ot3mkMsj5K"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Directives represent operations that are carried out during the inversion.Here, we apply common directives for weighted least-squares inversion of DC resistivity data and describe their roles. These are:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KyiokdoLyY"}],"key":"btRNGir5yb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LbxdF1SlLN"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","error":true,"key":"wuYnxySByj"},{"type":"text","value":": apply sensitivity weighting to counteract the natural tendancy of DC resistivity inversion to place materials near the electrodes. Since the problem is non-linear and the sensitivities are updated with every model, we set ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"K58Q6wF43f"},{"type":"inlineCode","value":"every_iteration=True","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YnrBTM5Jih"},{"type":"text","value":". For DC resistivity inversion, we do not want to use the entire dynamic range of the sensitivities to generate our weighting. So we generally set ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sS95DhXOio"},{"type":"inlineCode","value":"threshold_value","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"swQXHidICw"},{"type":"text","value":" to a value betwewen 1e-5 and 1e-3.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Bi83l8BSEt"}],"key":"gWwUbC6KXO"}],"key":"lyXfdRk9fW"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"KUz3y1fwpX"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","error":true,"key":"RaR5EB0wXY"},{"type":"text","value":": Apply Jacobi preconditioner when solving optimization problem to reduce the number of conjugate gradient iterations. We set ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"e4kyBKVdGh"},{"type":"inlineCode","value":"update_every_iteration=True","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ojdamNABI9"},{"type":"text","value":" because the ideal preconditioner is model-dependent.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ihYLsaZPKT"}],"key":"mFnpNij2gO"}],"key":"Os6Mzj2TXO"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"C2DE2ie0Hh"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","error":true,"key":"Ybx6purmIx"},{"type":"text","value":": Compute and set starting trade-off parameter (beta) based on largest eigenvalues.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"UVWpzGZDT2"}],"key":"aVNGOp8vUO"}],"key":"DSIhizPnrx"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaSchedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"MXIdRgNWHU"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaSchedule","error":true,"key":"CEunEhyZfU"},{"type":"text","value":": Size reduction of the trade-off parameter at every beta iteration, and the number of Gauss-Newton iterations for each beta. In general, a ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"sdHEzUeraq"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"PvqjSBg3lL"},{"type":"text","value":" between 1.5 and 2.5, and ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qepxSa9wrV"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"fOaZXLdjX8"},{"type":"text","value":" of 2 or 3 works well for DC resistivity inversion. Cooling beta too quickly will result in portions of the model getting trapped in local minima. And we will not be finding the solution that minimizes the optimization problem if the cooling rate is too small.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"sD2VWoQk9f"}],"key":"LIP7Hq6N5s"}],"key":"bsbtgG6zik"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"myst:SimPEG#SimPEG.directives.TargetMisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"GV5Bebl5sY"}],"urlSource":"myst:SimPEG#SimPEG.directives.TargetMisfit","error":true,"key":"rCBNKDNvbc"},{"type":"text","value":": Terminates the inversion when the data misfit equals the target misfit. A ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"tzecC72R1S"},{"type":"inlineCode","value":"chifact=1","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"IECN9VKL0Y"},{"type":"text","value":" terminates the inversion when the data misfit equals the number of data.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"OyfvzzyUjx"}],"key":"n6y08r7G4D"}],"key":"OB88cKetMF"}],"key":"H0sBzmUoNP"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"The directive objects are organized in a ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"wyndGUWcow"},{"type":"inlineCode","value":"list","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"HU36whckqf"},{"type":"text","value":". Upon starting the inversion or updating the recovered model at each iteration, the inversion will call each directive within the list ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"kOSjRRCLTM"},{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"in order","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"vrlksvUSBd"}],"key":"vLp0zAu6vH"},{"type":"text","value":". The order of the directives matters, and SimPEG will throw an error if directives are organized into an improper order. Some directives, like the ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"JmFMOdHyna"},{"type":"inlineCode","value":"BetaEstimate_ByEig","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ycLFxKciqP"},{"type":"text","value":" are only used when starting the inversion. Other directives, like ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"dRvF4qRTtk"},{"type":"inlineCode","value":"UpdatePreconditionner","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ZbG8SzTtKN"},{"type":"text","value":", are used whenever the model is updated.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"JDsUfjm9PN"}],"key":"iqYvK988XS"}],"data":{"type":"notebook-content"},"key":"y0Q60QhorG"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights = directives.UpdateSensitivityWeights(\n    every_iteration=True, threshold_value=1e-2\n)\nupdate_jacobi = directives.UpdatePreconditioner(update_every_iteration=True)\nstarting_beta = directives.BetaEstimate_ByEig(beta0_ratio=10)\nbeta_schedule = directives.BetaSchedule(coolingFactor=2.0, coolingRate=2)\ntarget_misfit = directives.TargetMisfit(chifact=1.0)\n\ndirectives_list_L2 = [\n    sensitivity_weights,\n    update_jacobi,\n    starting_beta,\n    beta_schedule,\n    target_misfit,\n]","key":"Bjb33HlPbc"},{"type":"output","id":"5nYcwHljX7Q1ZfziJbIto","data":[],"key":"TAlFPSXYKn"}],"data":{"type":"notebook-code"},"key":"roz8tuFJKw"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gGTlaSiZRM"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion","implicit":true,"key":"PpNw7CQBLn"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We define the inversion using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WrCs8JrN3x"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.inversion.BaseInversion.html#simpeg.inversion.baseinversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FydQnRdAvN"}],"urlSource":"myst:SimPEG#SimPEG.inversion.BaseInversion","internal":false,"protocol":"myst","key":"qKqVMPmA3U"},{"type":"text","value":" class. The inversion class must be instatiated with an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J0L7VjV40e"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"inverse problem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i7bAX2gwhv"}],"key":"J8LMTXWf5S"},{"type":"text","value":" object and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BOafXOlCfL"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"directives list","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TG3BvAbpt1"}],"key":"RKSCZ2Zw0q"},{"type":"text","value":". The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wB4wY2FtdS"},{"type":"inlineCode","value":"run","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"satiupzgRi"},{"type":"text","value":" method, along with a starting model, is respondible for running the inversion. The output is a 1D numpy.ndarray containing the recovered model parameters","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jLcrbLVJ8q"}],"key":"EVBrsOdAIC"}],"data":{"type":"notebook-content"},"key":"HVTm23gDvP"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Here we combine the inverse problem and the set of directives\ninv_L2 = inversion.BaseInversion(inv_prob_L2, directives_list_L2)\n\n# Run the inversion\n# recovered_model_L2 = inv_L2.run(np.log(0.01) * np.ones(n_param))\nrecovered_log_conductivity_model = inv_L2.run(starting_conductivity_model)","key":"NYhoR7NqV6"},{"type":"output","id":"5lrpq_YrJ4Qqcw4A1h2iD","data":[{"name":"stdout","output_type":"stream","text":"\n                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation2DNodal problem***\n                        \n"},{"name":"stderr","output_type":"stream","text":"d:\\documents\\repositories\\simpeg\\SimPEG\\electromagnetics\\static\\resistivity\\simulation_2d.py:756: RuntimeWarning: invalid value encountered in divide\n  r_hat = r_vec / r[:, None]\nd:\\documents\\repositories\\simpeg\\SimPEG\\electromagnetics\\static\\resistivity\\simulation_2d.py:783: RuntimeWarning: invalid value encountered in divide\n  alpha[not_top] = (ky * k1e(ky * r) / k0e(ky * r) * r_dot_n)[not_top]\n"},{"name":"stdout","output_type":"stream","text":"model has any nan: 0\n============================ Inexact Gauss Newton ============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  2.88e+01  2.23e+04  0.00e+00  2.23e+04    2.66e+03      0              \n   1  2.88e+01  8.96e+02  2.93e+01  1.74e+03    2.08e+02      0              \n   2  1.44e+01  2.61e+02  3.85e+01  8.15e+02    4.49e+01      0   Skip BFGS  \n   3  1.44e+01  1.30e+02  4.40e+01  7.63e+02    4.18e+00      0   Skip BFGS  \n   4  7.20e+00  1.31e+02  4.41e+01  4.49e+02    2.56e+01      0              \n   5  7.20e+00  7.67e+01  4.73e+01  4.17e+02    2.33e+00      0              \n   6  3.60e+00  7.61e+01  4.76e+01  2.47e+02    1.31e+01      0              \n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 2.2270e+03\n1 : |xc-x_last| = 2.6856e+00 <= tolX*(1+|x0|) = 3.8957e+01\n0 : |proj(x-g)-x|    = 1.3102e+01 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 1.3102e+01 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =      40    <= iter          =      7\n------------------------- DONE! -------------------------\n"}],"key":"wyVsAIvJKx"}],"data":{"type":"notebook-code"},"key":"Ht42Przrat"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O5SvPFYdK1"}],"identifier":"plot-the-data-misfit","label":"Plot the Data Misfit","html_id":"plot-the-data-misfit","implicit":true,"key":"IPia46e48D"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This step is necessary for determining whether the recovered model accurately reproduces observed anomalies. Here, we plot the observed data, predicted data for the recovered model, and the normalized data misfit. As we can see, the recovered model reproduces the observed data quite well. And the normalized misfit map indicates we are not overfitting certain electrodes relative to others.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YtHAiDcHEa"}],"key":"KtIdUEnLvV"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"If desired, one could also use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YtiyEIBA2j"},{"type":"link","url":"SimPEG#SimPEG.electromagnetics.static.utils.apparent_resistivity_from_voltage","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"apparent​_resistivity​_from​_voltage","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qOr7uPstVu"}],"urlSource":"SimPEG#SimPEG.electromagnetics.static.utils.apparent_resistivity_from_voltage","key":"XwjgekyLFZ"},{"type":"text","value":" utility function compare observed and predicted data as apparent resistivities.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UVaFrLKLJW"}],"key":"j6BqqpSXpR"}],"data":{"type":"notebook-content"},"key":"jHVSfSHwas"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Predicted data from recovered model\ndpred = inv_prob_L2.dpred\ndobs = voltage_data.dobs\nstd = voltage_data.standard_deviation\n\n# Plot\nfig = plt.figure(figsize=(9, 11))\ndata_array = [np.abs(dobs), np.abs(dpred), (dobs - dpred) / std]\nplot_title = [\"Observed Voltage\", \"Predicted Voltage\", \"Normalized Misfit\"]\nplot_units = [\"V/A\", \"V/A\", \"\"]\nscale = [\"log\", \"log\", \"linear\"]\ncmap_list = [mpl.cm.viridis, mpl.cm.viridis, mpl.cm.RdYlBu]\n\nax1 = 3 * [None]\ncax1 = 3 * [None]\ncbar = 3 * [None]\ncplot = 3 * [None]\n\nfor ii in range(0, 3):\n    ax1[ii] = fig.add_axes([0.15, 0.72 - 0.33 * ii, 0.65, 0.21])\n    cax1[ii] = fig.add_axes([0.81, 0.72 - 0.33 * ii, 0.03, 0.21])\n    cplot[ii] = plot_pseudosection(\n        voltage_data.survey,\n        data_array[ii],\n        \"contourf\",\n        ax=ax1[ii],\n        cax=cax1[ii],\n        scale=scale[ii],\n        cbar_label=plot_units[ii],\n        mask_topography=True,\n        contourf_opts={\"levels\": 25, \"cmap\": cmap_list[ii]},\n    )\n    ax1[ii].set_title(plot_title[ii])\n\nplt.show()","key":"STC0Wb2E2u"},{"type":"output","id":"oITSWGmgIHNDot32zMSiw","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"db89a499ba96ba587e577080f9389ebb","path":"/user-tutorials/build/db89a499ba96ba587e577080f9389ebb.png"},"text/plain":{"content":"<Figure size 900x1100 with 6 Axes>","content_type":"text/plain"}}}],"key":"KERji4uPni"}],"data":{"type":"notebook-code"},"key":"BbyceXV7vT"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Recovered Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fmYQto3htb"}],"identifier":"plot-the-recovered-model","label":"Plot the Recovered Model","html_id":"plot-the-recovered-model","implicit":true,"key":"JEUJ1sfIYI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As we can see, weighted least-squares regularization leads to the recovery of smooth models.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JRcDXZv6vK"}],"key":"xkE6GdG4GX"}],"data":{"type":"notebook-content"},"key":"izgztP9yKU"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert log-conductivity values to conductivity values\nrecovered_conductivity_L2 = np.exp(recovered_log_conductivity_model)","key":"Tp3i0vmOwn"},{"type":"output","id":"7WDqD7FOo3CRkvV1rTE18","data":[],"key":"klqybLa3VG"}],"data":{"type":"notebook-code"},"key":"ebJZAzIjiz"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define a mapping to plot models and ignore inactive cells\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"D6nnG2JufU"},{"type":"output","id":"pjy3wcz6FbIjBE_6ZIRlf","data":[],"key":"FySpUQmriu"}],"data":{"type":"notebook-code"},"key":"aW2gbl5Dbp"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"norm = LogNorm(vmin=5e-4, vmax=2e-1)\n\nfig = plt.figure(figsize=(9, 4))\n\nax1 = fig.add_axes([0.14, 0.17, 0.68, 0.7])\nmesh.plot_image(\n    plotting_map * recovered_conductivity_L2,\n    normal=\"Y\",\n    ax=ax1,\n    grid=False,\n    pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.RdYlBu_r},\n)\nax1.set_xlim(-500, 500)\nax1.set_ylim(-300, 200)\nax1.set_title(\"Recovered Conductivity Model (L2)\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.84, 0.17, 0.03, 0.7])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.RdYlBu_r\n)\ncbar.set_label(r\"$\\sigma$ (S/m)\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"WVwXwp3zhO"},{"type":"output","id":"tkn1iedJpnOn7NCLgFflc","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"894492f2765eb01843de5bb44e955b82","path":"/user-tutorials/build/894492f2765eb01843de5bb44e955b82.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"GEpqsO4RRb"}],"data":{"type":"notebook-code"},"key":"rGK1Dynpiy"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Iteratively Re-weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r42Frzc7GG"}],"identifier":"iteratively-re-weighted-least-squares-inversion","label":"Iteratively Re-weighted Least-Squares Inversion","html_id":"iteratively-re-weighted-least-squares-inversion","implicit":true,"key":"YpzEXzdwog"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we provide a step-by-step best-practices approach for IRLS inversion of apparent resistivity data on a tree mesh to recover a log-resistivity model. Many of the steps are the same as our previous approach. As a result, we will avoiding repeating information whenever possible.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UjcwSNePQs"}],"key":"Iu61T6DtHu"}],"data":{"type":"notebook-content"},"key":"H6oMWCWvCP"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define An Apparent Resistivity Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jGw3Rfkw0i"}],"identifier":"define-an-apparent-resistivity-survey","label":"Define An Apparent Resistivity Survey","html_id":"define-an-apparent-resistivity-survey","implicit":true,"key":"VZQxmpk5Fr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We cannot reuse a survey that was used to simulate a different data type. So we must define a new survey object for inverting apparent resistivity data. This can be done by extracting the ABMN electrode locations from the previous survey object and using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a3iz2z8v26"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.electromagnetics.static.utils.generate_survey_from_abmn_locations.html#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"generate​_survey​_from​_abmn​_locations","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DudZGMh0yN"}],"urlSource":"myst:SimPEG#SimPEG.electromagnetics.static.utils.generate_survey_from_abmn_locations","internal":false,"protocol":"myst","key":"GR01oJ3l4N"},{"type":"text","value":" utility function.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XlBHbAi7xQ"}],"key":"cSYDSQRUKV"}],"data":{"type":"notebook-content"},"key":"ILNP1O4tX6"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Extract ABMN electrode locations from previous survey object\nlocations_a = voltage_data.survey.locations_a.copy()\nlocations_b = voltage_data.survey.locations_b.copy()\nlocations_m = voltage_data.survey.locations_m.copy()\nlocations_n = voltage_data.survey.locations_n.copy()\n\n# Define survey from ABMN locations\nresistivity_survey = generate_survey_from_abmn_locations(\n    locations_a=locations_a,\n    locations_b=locations_b,\n    locations_m=locations_m,\n    locations_n=locations_n,\n    data_type=\"apparent_resistivity\",\n)\n\n# Set geometric factor for survey (to be handled internally in future versions)\nresistivity_survey.set_geometric_factor()","key":"egGr6vddrP"},{"type":"output","id":"1d63nN7C9QrJCvNBl4jba","data":[{"output_type":"execute_result","execution_count":24,"metadata":{},"data":{"text/plain":{"content":"<SimPEG.data.Data at 0x1b15dac9b40>","content_type":"text/plain"}}}],"key":"xJQplGM6HU"}],"data":{"type":"notebook-code"},"key":"yPrkzjkuIq"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Xmr4eEK0CT"}],"identifier":"define-the-data","label":"Define the Data","html_id":"define-the-data","implicit":true,"key":"A5TuY3BThv"}],"data":{"type":"notebook-content"},"key":"XnLMfw8UIY"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"resistivity_data = data.Data(survey=resistivity_survey, dobs=apparent_resistivities)","key":"W85YDAFPJg"},{"type":"output","id":"7BCI8jhPLyFou0nBFUysT","data":[],"key":"aPfaATYUp3"}],"data":{"type":"notebook-code"},"key":"e29wuh3j0x"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Assign Uncertainties","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y4tVZuIueh"}],"identifier":"assign-uncertainties","label":"Assign Uncertainties","html_id":"assign-uncertainties-1","implicit":true,"key":"SMUaPxamSJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Uncertainties for apparent resistivity data were discussed earlier. Here we apply uncertainties of 1e-3 ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ScRPPHjhFa"},{"type":"inlineMath","value":"\\Omega m","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"LvnXjJs4vZ"},{"type":"text","value":" + 5 % to all data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TGjs5ZwYmV"}],"key":"CELoIpSWQl"}],"data":{"type":"notebook-content"},"key":"VSvWwKmzBj"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"resistivity_data.standard_deviation = 1e-3 + 0.05 * np.abs(resistivity_data.dobs)","key":"RRBuE9HssO"},{"type":"output","id":"dfNOh3L1Ob47DPkcpiBR6","data":[],"key":"jhN8MZI6Xo"}],"data":{"type":"notebook-code"},"key":"FZZNvaF2tA"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mapping from the Model to the Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fQOw05pR3k"}],"identifier":"mapping-from-the-model-to-the-mesh","label":"Mapping from the Model to the Mesh","html_id":"mapping-from-the-model-to-the-mesh-1","implicit":true,"key":"SBe1265hHs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, the model defines the log-resistivity values for all active cells. We use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gSJUnbt0WA"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.ExpMap.html#simpeg.maps.expmap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG.maps.ExpMap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SWEplrw3o5"}],"urlSource":"myst:SimPEG#SimPEG.maps.ExpMap","internal":false,"protocol":"myst","key":"VtkXEVfCTh"},{"type":"text","value":" to map from the model parameters to the resistivity values for all active cells. Then we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n3cLC6pnR5"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG​.maps​.InjectActiveCells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zS2Xixj1MA"}],"urlSource":"myst:SimPEG#SimPEG.maps.InjectActiveCells","internal":false,"protocol":"myst","key":"CqOeQvb16Z"},{"type":"text","value":" map to project the active cell resisitivities to the entire mesh. As explained in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fWMpZwD6px"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GzIP3LlWo3"}],"urlSource":"fwd_dcr_2d.ipynb","internal":true,"dataUrl":"/fwd-dcr-2d.json","protocol":"file","key":"AYa8bYyQ0E"},{"type":"text","value":" tutorial, air cells are given a fixed value of 1e8 ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Vle6kUEs7r"},{"type":"inlineMath","value":"\\Omega m","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"UILx5xswMn"},{"type":"text","value":" to ensure the forward problem is well-conditionned. And the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KTQNwAaLHN"},{"type":"inlineMath","value":"*","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>","key":"e7VAymPB4l"},{"type":"text","value":" operator is used to combine the separate mapping objects into a single mapping.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"edII3vesaz"}],"key":"uyKhujVhbp"}],"data":{"type":"notebook-content"},"key":"V3A24ArxLR"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"log_resistivity_map = maps.InjectActiveCells(mesh, active_cells, 1e8) * maps.ExpMap(\n    nP=n_active\n)","key":"yq46gXgOdm"},{"type":"output","id":"6yg7tvL31RbJ8t6KUZq_K","data":[],"key":"Vi9VCw0RfQ"}],"data":{"type":"notebook-code"},"key":"XVEHetH0sV"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Starting/Reference Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QDiON2VenZ"}],"identifier":"starting-reference-models","label":"Starting/Reference Models","html_id":"starting-reference-models-1","implicit":true,"key":"aOfjnNwHCB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The starting model is defined according to the median apparent resistivity value. The reference model is equal to the starting model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HAjTEhA7Q2"}],"key":"GOSgMWVRy4"}],"data":{"type":"notebook-content"},"key":"eFmCfVkSoH"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Create staring model from log-resistivities\nstarting_resistivity_model = np.log(median_resistivity) * np.ones(n_active)\n\n# Zero reference model\nreference_resistivity_model = starting_resistivity_model.copy()","key":"Y8oOaM3UYt"},{"type":"output","id":"J3RfabIVP5-o1kezoNvKO","data":[],"key":"KI5elMixpG"}],"data":{"type":"notebook-code"},"key":"Qx2ZeHDpfY"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WvqkYgtwNa"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation-1","implicit":true,"key":"uAGmnkjAxY"}],"data":{"type":"notebook-content"},"key":"eyJZNzmbJb"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"resistivity_simulation = dc.simulation_2d.Simulation2DNodal(\n    mesh, survey=resistivity_data.survey, rhoMap=log_resistivity_map, storeJ=True\n)","key":"A2PXlVa1w1"},{"type":"output","id":"ArYLqWTZIIpHhkhcm_Qhc","data":[],"key":"MSu55Wnjsh"}],"data":{"type":"notebook-code"},"key":"kSZzRKjMd9"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QbTnbg5PSK"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit-1","implicit":true,"key":"XNiOCRFjrP"}],"data":{"type":"notebook-content"},"key":"PMrrYhtJce"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dmis_irls = data_misfit.L2DataMisfit(\n    simulation=resistivity_simulation, data=resistivity_data\n)","key":"qqpaq2vV1s"},{"type":"output","id":"MR8S3EIg-WxLClw6JfV-i","data":[],"key":"g4FYjgKNW6"}],"data":{"type":"notebook-code"},"key":"qOlUrEQmPL"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XTgEjbD5tL"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization-1","implicit":true,"key":"LhwbdODrIf"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o6S7ymUdmy"},{"type":"link","url":"https://docs.simpeg.xyz/content/api/generated/SimPEG.regularization.Sparse.html#simpeg.regularization.sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"naH04sRCgr"}],"urlSource":"myst:SimPEG#SimPEG.regularization.Sparse","internal":false,"protocol":"myst","key":"dhGfzvRXPh"},{"type":"text","value":" regularization class to constrain the inversion result using an IRLS approach. Length scales along x and y are used to balance the smallness and smoothness terms. Here, length scales of 100 are used to more strongly emphasis smoothness in the recovered model. The reference model is only applied to the smallness term; which is redundant for the tutorial example since we have set the reference model to an array of zeros. Here, we apply a 0-norm to the smallness and 2-norm to first-order smoothness along the x and y directions.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l8EIqBaFTq"}],"key":"wb7Jprq4Mo"}],"data":{"type":"notebook-content"},"key":"chj4CQEHDn"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"reg_irls = regularization.Sparse(\n    mesh,\n    active_cells=active_cells,\n    length_scale_x=5.0,\n    length_scale_y=5.0,\n    norms=[0, 2, 2],\n    reference_model=reference_resistivity_model,\n)","key":"noD9jt4qCw"},{"type":"output","id":"fM0Rht07mHHuSrotI_KX3","data":[],"key":"M9zaN8DvyV"}],"data":{"type":"notebook-code"},"key":"KCd20JGZfx"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zWewi3sfvx"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm-1","implicit":true,"key":"etNQQ6kZtp"}],"data":{"type":"notebook-content"},"key":"O20QiJlIRE"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"opt_irls = optimization.InexactGaussNewton(\n    maxIter=50, maxIterLS=20, maxIterCG=20, tolCG=1e-3\n)","key":"SSVjaXD4m1"},{"type":"output","id":"ffroXbWfX-fa0is8UM-8K","data":[],"key":"REekYZMXQy"}],"data":{"type":"notebook-code"},"key":"DgVgzGOvxU"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oYiHNW6oSn"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem-1","implicit":true,"key":"DnDrNQwBUy"}],"data":{"type":"notebook-content"},"key":"tUCS9uN34k"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_irls = inverse_problem.BaseInvProblem(dmis_irls, reg_irls, opt_irls)","key":"NXJzmanqzL"},{"type":"output","id":"rJ1zWStfBAJ1dqMaXXrZI","data":[],"key":"TMwK6gllgu"}],"data":{"type":"notebook-code"},"key":"SyJuJ7lOkg"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jgjKcTUFhD"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives-1","implicit":true,"key":"M9G6I32BeN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we create common directives for IRLS inversion of total magnetic intensity data and describe their roles. In additon to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xj2UuLXWQL"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eZlgsH4Y1p"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdateSensitivityWeights","error":true,"key":"vsvGMAj4vk"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Be2H0Ghgc5"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xo4g1O2IHl"}],"urlSource":"myst:SimPEG#SimPEG.directives.UpdatePreconditioner","error":true,"key":"Oe6XHq1kC9"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MydeqxVUOy"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tjhXTcsjx0"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaEstimate_ByEig","error":true,"key":"mFnfuf01hl"},{"type":"text","value":"  (described before), inversion with sparse-norms requires the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tWJDH8m9Vl"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.Update_IRLS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Update_IRLS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oCHPKJmji0"}],"urlSource":"myst:SimPEG#SimPEG.directives.Update_IRLS","error":true,"key":"ZRpgeAxxkk"},{"type":"text","value":" directive.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FR8nycrbpF"}],"key":"HATUw1wBVA"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You will notice that we don’t use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rTduZqFqha"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.BetaSchedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"c4hwR7Q2KC"}],"urlSource":"myst:SimPEG#SimPEG.directives.BetaSchedule","error":true,"key":"xZBeAkjqyd"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mtw57ViAjL"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.TargetMisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"h5Tz3ByxUY"}],"urlSource":"myst:SimPEG#SimPEG.directives.TargetMisfit","error":true,"key":"L4Uj3hMwZa"},{"type":"text","value":" directives. Here, the beta cooling schedule is set in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UD9ANXSe6P"},{"type":"link","url":"myst:SimPEG#SimPEG.directives.Update_IRLS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Update_IRLS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nZwahpNPUn"}],"urlSource":"myst:SimPEG#SimPEG.directives.Update_IRLS","error":true,"key":"r2x6zyonGQ"},{"type":"text","value":" directive using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r5hVPSWm6t"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WlEa0YqRT6"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"F7pWcQUiJP"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cdRaF2A0f8"},{"type":"text","value":" properties. The target misfit for the L2 portion of the IRLS approach is set with the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JKfRVGoIJ0"},{"type":"inlineCode","value":"chifact_start","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gji6LzravI"},{"type":"text","value":" property.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Nb2Jswlttq"}],"key":"ysazGch1Ip"}],"data":{"type":"notebook-content"},"key":"X7fUQUYPdB"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights_irls = directives.UpdateSensitivityWeights(\n    every_iteration=True, threshold_value=1e-2\n)\nupdate_irls = directives.Update_IRLS(\n    coolingFactor=2,\n    coolingRate=2,\n    f_min_change=1e-4,\n    max_irls_iterations=30,\n    chifact_start=1.0,\n)\nstarting_beta_irls = directives.BetaEstimate_ByEig(beta0_ratio=10)\nupdate_jacobi_irls = directives.UpdatePreconditioner(update_every_iteration=True)\n\ndirectives_list_irls = [\n    update_irls,\n    sensitivity_weights_irls,\n    starting_beta_irls,\n    update_jacobi_irls,\n]","key":"uo28SXAZxj"},{"type":"output","id":"t_B9BMT-ZEbKow5klJB_q","data":[],"key":"Bl9JHQKwR7"}],"data":{"type":"notebook-code"},"key":"zk5Et0Borz"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pi9aTO2Eb3"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion-1","implicit":true,"key":"RRryvjqDbT"}],"data":{"type":"notebook-content"},"key":"dlTTYXm4OW"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"inv_irls = inversion.BaseInversion(inv_prob_irls, directives_list_irls)\nrecovered_log_resistivity_model = inv_irls.run(starting_resistivity_model)","key":"K32IzlrfXs"},{"type":"output","id":"C6lKymszRXKLs2eB09rPn","data":[{"name":"stdout","output_type":"stream","text":"\n                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation2DNodal problem***\n                        \nmodel has any nan: 0\n============================ Inexact Gauss Newton ============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  1.74e+00  2.24e+04  0.00e+00  2.24e+04    2.69e+03      0              \n   1  1.74e+00  1.12e+03  5.98e+02  2.16e+03    2.12e+02      0              \n   2  8.70e-01  4.39e+02  8.19e+02  1.15e+03    6.38e+01      0   Skip BFGS  \n   3  8.70e-01  2.25e+02  9.73e+02  1.07e+03    6.30e+00      0   Skip BFGS  \n   4  4.35e-01  2.24e+02  9.72e+02  6.47e+02    4.15e+01      0              \n   5  4.35e-01  1.23e+02  1.12e+03  6.09e+02    3.21e+00      0              \n   6  2.18e-01  1.24e+02  1.11e+03  3.67e+02    2.28e+01      0              \n   7  2.18e-01  7.92e+01  1.24e+03  3.50e+02    1.98e+00      0              \n   8  1.09e-01  8.02e+01  1.24e+03  2.15e+02    1.23e+01      0              \nReached starting chifact with l2-norm regularization: Start IRLS steps...\nirls_threshold 2.701236207842646\n   9  1.09e-01  5.89e+01  1.81e+03  2.56e+02    4.78e+00      0              \n  10  1.09e-01  6.23e+01  1.95e+03  2.74e+02    2.92e+00      0              \n  11  1.09e-01  6.36e+01  2.04e+03  2.85e+02    2.08e+00      0   Skip BFGS  \n  12  1.09e-01  6.44e+01  2.10e+03  2.92e+02    2.14e+00      0   Skip BFGS  \n  13  1.09e-01  6.50e+01  2.12e+03  2.96e+02    2.25e+00      0              \n  14  1.09e-01  6.55e+01  2.11e+03  2.95e+02    2.32e+00      0              \n  15  1.09e-01  6.59e+01  2.07e+03  2.91e+02    2.39e+00      0              \n  16  1.09e-01  6.61e+01  2.00e+03  2.84e+02    2.47e+00      0              \n  17  1.09e-01  6.62e+01  1.92e+03  2.75e+02    2.56e+00      0              \n  18  1.09e-01  6.61e+01  1.83e+03  2.66e+02    2.76e+00      0              \n  19  1.09e-01  6.62e+01  1.75e+03  2.56e+02    2.92e+00      0              \n  20  1.09e-01  6.63e+01  1.66e+03  2.47e+02    3.00e+00      0              \n  21  1.09e-01  6.64e+01  1.57e+03  2.37e+02    3.04e+00      0              \n  22  1.09e-01  6.65e+01  1.49e+03  2.28e+02    3.08e+00      0              \n  23  1.09e-01  6.65e+01  1.40e+03  2.19e+02    3.16e+00      0              \n  24  1.09e-01  6.64e+01  1.32e+03  2.10e+02    3.35e+00      0              \n  25  1.09e-01  6.61e+01  1.24e+03  2.01e+02    3.55e+00      0              \n  26  1.09e-01  6.56e+01  1.17e+03  1.93e+02    3.69e+00      0              \n  27  1.09e-01  6.51e+01  1.11e+03  1.85e+02    3.69e+00      0              \n  28  1.09e-01  6.48e+01  1.05e+03  1.79e+02    3.62e+00      0   Skip BFGS  \n  29  1.09e-01  6.47e+01  9.99e+02  1.73e+02    3.55e+00      0   Skip BFGS  \n  30  1.09e-01  6.48e+01  9.54e+02  1.69e+02    3.50e+00      0   Skip BFGS  \n  31  1.09e-01  6.50e+01  9.13e+02  1.64e+02    3.48e+00      0   Skip BFGS  \n  32  1.09e-01  6.52e+01  8.78e+02  1.61e+02    3.48e+00      0   Skip BFGS  \n  33  1.09e-01  6.56e+01  8.47e+02  1.58e+02    3.53e+00      0   Skip BFGS  \n  34  1.09e-01  6.59e+01  8.21e+02  1.55e+02    3.66e+00      0   Skip BFGS  \n  35  1.09e-01  6.62e+01  7.99e+02  1.53e+02    3.75e+00      0   Skip BFGS  \n  36  1.09e-01  6.66e+01  7.79e+02  1.51e+02    3.85e+00      0   Skip BFGS  \n  37  1.09e-01  6.69e+01  7.59e+02  1.49e+02    3.92e+00      0   Skip BFGS  \n  38  1.09e-01  6.70e+01  7.41e+02  1.48e+02    4.09e+00      0              \nReach maximum number of IRLS cycles: 30\n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 2.2394e+03\n1 : |xc-x_last| = 2.7833e-01 <= tolX*(1+|x0|) = 3.8957e+01\n0 : |proj(x-g)-x|    = 4.0891e+00 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 4.0891e+00 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =      50    <= iter          =     39\n------------------------- DONE! -------------------------\n"}],"key":"A4sg2gigMi"}],"data":{"type":"notebook-code","scrolled":false},"key":"EKnaA0xQlu"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot True, L2 and IRLS Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NSUmcmQdHZ"}],"identifier":"plot-true-l2-and-irls-models","label":"Plot True, L2 and IRLS Models","html_id":"plot-true-l2-and-irls-models","implicit":true,"key":"wfAdA4HkTU"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we compare the models recovered from weighted least-squares and iteratively re-weighted least-squares inversion to the true model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lBZJmU6atP"}],"key":"aj6UdMOgOG"}],"data":{"type":"notebook-content"},"key":"xKbcHbr5nD"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Recreate the true model\ntrue_background_conductivity = 1e-2\ntrue_conductor_conductivity = 1e-1\ntrue_resistor_conductivity = 1e-3\n\ntrue_conductivity_model = true_background_conductivity * np.ones(n_active)\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-120.0, 40.0], 60.0, mesh.cell_centers[active_cells, :]\n)\ntrue_conductivity_model[ind_conductor] = true_conductor_conductivity\n\nind_resistor = model_builder.get_indices_sphere(\n    np.r_[120.0, 72.0], 60.0, mesh.cell_centers[active_cells, :]\n)\ntrue_conductivity_model[ind_resistor] = true_resistor_conductivity","key":"BL15eai2w2"},{"type":"output","id":"qoLEnL9jD_y3EXx3jnhO4","data":[],"key":"SovzeQ1ajO"}],"data":{"type":"notebook-code"},"key":"pggFmFyOxF"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert recovered log-resistivities to conductivities\nrecovered_conductivity_irls = 1 / np.exp(recovered_log_resistivity_model)","key":"G55P4uasLO"},{"type":"output","id":"UIPvLrhkMllo0pNJb0SIq","data":[],"key":"LLWmgBYZGs"}],"data":{"type":"notebook-code"},"key":"Cz8IRYjk9F"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert to subsurface conductivity values\nplotting_model = [\n    true_conductivity_model,\n    recovered_conductivity_L2,\n    recovered_conductivity_irls,\n]\n\nfig = plt.figure(figsize=(9, 13))\nax1 = 3 * [None]\nax2 = 3 * [None]\ntitle_str = [\n    \"True Conductivity Model\",\n    \"Recovered Model (L2)\",\n    \"Recovered Model (IRLS)\",\n]\n\nfor ii in range(0, 3):\n    ax1[ii] = fig.add_axes([0.14, 0.75 - 0.3 * ii, 0.68, 0.22])\n    mesh.plot_image(\n        plotting_map * plotting_model[ii],\n        ax=ax1[ii],\n        grid=False,\n        pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.RdYlBu_r},\n    )\n    ax1[ii].set_xlim(-500, 500)\n    ax1[ii].set_ylim(-300, 200)\n    ax1[ii].set_title(title_str[ii])\n    ax1[ii].set_xlabel(\"x (m)\")\n    ax1[ii].set_ylabel(\"z (m)\")\n\n    ax2[ii] = fig.add_axes([0.84, 0.75 - 0.3 * ii, 0.03, 0.22])\n    cbar = mpl.colorbar.ColorbarBase(\n        ax2[ii], norm=norm, orientation=\"vertical\", cmap=mpl.cm.RdYlBu_r\n    )\n    cbar.set_label(r\"$\\sigma$ (S/m)\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"Vbfv1AjgoP"},{"type":"output","id":"15poTnqEYxEENlCj_J7El","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4097e78ebe25050cc4ba016bc49ca31e","path":"/user-tutorials/build/4097e78ebe25050cc4ba016bc49ca31e.png"},"text/plain":{"content":"<Figure size 900x1300 with 6 Axes>","content_type":"text/plain"}}}],"key":"P0jG4Lt2aU"}],"data":{"type":"notebook-code"},"key":"UpPA6m1LaL"}],"key":"tFLkp5zUrQ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"1D Inversion for a Single Sounding","url":"/inv-dcr-1d","group":"SimPEG User Tutorials"},"next":{"title":"3D DC Resistivity Inversion","url":"/inv-dcr-3d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}